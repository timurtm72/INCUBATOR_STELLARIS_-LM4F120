_Init_Gpio:
  begin   (midx: 0)
//inkubator_func.c,3 :: 		void Init_Gpio()
_Init_Gpio:
  begin   (midx: 0)
//inkubator_func.c,6 :: 		GPIO_Config(&GPIO_PORTF, _GPIO_PINMASK_1|_GPIO_PINMASK_2|_GPIO_PINMASK_3 , _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE| _GPIO_CFG_DRIVE_8mA , _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 320   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 14   (midx: 0)
	R0 <4> <- #GPIO_PORTF   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,8 :: 		GPIO_Config(&GPIO_PORTA, _GPIO_PINMASK_3|_GPIO_PINMASK_4|_GPIO_PINMASK_5 , _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE| _GPIO_CFG_DRIVE_8mA , _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 320   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 56   (midx: 0)
	R0 <4> <- #GPIO_PORTA   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,9 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_5|_GPIO_PINMASK_6|_GPIO_PINMASK_7 , _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE| _GPIO_CFG_DRIVE_8mA , _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 320   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 224   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,10 :: 		GPIO_Config(&GPIO_PORTE, _GPIO_PINMASK_0 , _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE| _GPIO_CFG_DRIVE_8mA  , _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 320   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- #GPIO_PORTE   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,12 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_3, _GPIO_DIR_INPUT, _GPIO_CFG_DIGITAL_ENABLE, _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <1> <- 8   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,14 :: 		GPIO_Config(&GPIO_PORTA, _GPIO_PINMASK_2, _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE| _GPIO_CFG_DRIVE_8mA , _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 320   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- #GPIO_PORTA   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,16 :: 		Sound_Init(&GPIO_PORTE_DATA, 1);
	R1 <4> <- 1   (midx: 0)
	R0 <4> <- #GPIO_PORTE_DATA   (midx: 0)
	CALL _Sound_Init   (midx: 0)
//inkubator_func.c,18 :: 		GPIO_Config(&GPIO_PORTD,_GPIO_PINMASK_6,_GPIO_DIR_INPUT,_GPIO_CFG_DIGITAL_ENABLE,_GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <1> <- 64   (midx: 0)
	R0 <4> <- #GPIO_PORTD   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,20 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_2 ,_GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE, _GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//inkubator_func.c,23 :: 		GPIO_Config(&GPIO_PORTD,_GPIO_PINMASK_0|_GPIO_PINMASK_1|_GPIO_PINMASK_2|_GPIO_PINMASK_3,_GPIO_DIR_INPUT,_GPIO_CFG_DIGITAL_ENABLE,_GPIO_PINCODE_NONE);
	R0 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R0)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <1> <- 15   (midx: 0)
	R0 <4> <- #GPIO_PORTD   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
  end
   (midx: 0)
_Init_ext_int:
  begin   (midx: 0)
//inkubator_func.c,27 :: 		void Init_ext_int()
_Init_ext_int:
  begin   (midx: 0)
//inkubator_func.c,29 :: 		GPIO_PORTD_AFSEL = _GPIO_PINMASK_6;    // Enable alternate pin functions
	R1 <4> <- 64   (midx: 0)
	R0 <4> <- addr(GPIO_PORTD_AFSEL)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,30 :: 		GPIO_PORTD_IS = 0;                     // Edge sensitive
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(GPIO_PORTD_IS)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,31 :: 		GPIO_PORTD_IBE = 0;                    // Edge/Level detection triggers interrupt
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(GPIO_PORTD_IBE)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,32 :: 		GPIO_PORTD_IEV = _GPIO_PINMASK_6;      // Rising Edge will trigger interrupt
	R1 <4> <- 64   (midx: 0)
	R0 <4> <- addr(GPIO_PORTD_IEV)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,33 :: 		GPIO_PORTD_IM = _GPIO_PINMASK_6;       // Set mask to pin6
	R1 <4> <- 64   (midx: 0)
	R0 <4> <- addr(GPIO_PORTD_IM)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,34 :: 		NVIC_IntEnable(IVT_INT_GPIOD);         // Enable GPIOD interrupt
	R0 <4> <- 19   (midx: 0)
	CALL _NVIC_IntEnable   (midx: 0)
  end
   (midx: 0)
_InitTimer0A:
  begin   (midx: 0)
//inkubator_func.c,39 :: 		void InitTimer0A(){
_InitTimer0A:
  begin   (midx: 0)
//inkubator_func.c,40 :: 		SYSCTL_RCGCTIMER_R0_bit = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(SYSCTL_RCGCTIMER_R0_bit)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,41 :: 		EnableInterrupts();
	CALL _EnableInterrupts   (midx: 0)
//inkubator_func.c,42 :: 		TIMER_CTL_TAEN_bit = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TIMER_CTL_TAEN_bit)   (midx: 0)
	FLOC_InitTimer0A+0 <4> <- R0   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,43 :: 		TIMER0_CFG   = 4;
	R1 <4> <- 4   (midx: 0)
	R0 <4> <- addr(TIMER0_CFG)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,44 :: 		TIMER0_TAMR |= 2;
	R0 <4> <- addr(TIMER0_TAMR)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 | 2   (midx: 2)
	R0 <4> <- addr(TIMER0_TAMR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,45 :: 		TIMER0_TAPR  = 63;
	R1 <4> <- 63   (midx: 0)
	R0 <4> <- addr(TIMER0_TAPR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,46 :: 		TIMER0_TAILR = 62500;
	R1 <4> <- 62500   (midx: 0)
	R0 <4> <- addr(TIMER0_TAILR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,47 :: 		NVIC_IntEnable(IVT_INT_TIMER0A_16_32_bit);
	R0 <4> <- 35   (midx: 0)
	CALL _NVIC_IntEnable   (midx: 0)
//inkubator_func.c,48 :: 		TIMER_IMR_TATOIM_bit = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(TIMER_IMR_TATOIM_bit)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,49 :: 		TIMER_CTL_TAEN_bit   = 1;
	R0 <4> <- FLOC_InitTimer0A+0   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
  end
   (midx: 0)
_StartTimer1A_10ms:
  begin   (midx: 0)
//inkubator_func.c,55 :: 		void StartTimer1A_10ms(unsigned long interval){ //50000=>10ms
_StartTimer1A_10ms:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
   (midx: 0)
//inkubator_func.c,56 :: 		SYSCTL_RCGCTIMER_R1_bit = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(SYSCTL_RCGCTIMER_R1_bit)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//inkubator_func.c,57 :: 		TIMER_CTL_TAEN_TIMER1_CTL_bit = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(TIMER_CTL_TAEN_TIMER1_CTL_bit)   (midx: 0)
	FLOC_StartTimer1A_10ms+0 <4> <- R1   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//inkubator_func.c,58 :: 		TIMER1_CFG   = 4;
	R2 <4> <- 4   (midx: 0)
	R1 <4> <- addr(TIMER1_CFG)   (midx: 0)
	[R1] <4> <- R2   (midx: 0)
//inkubator_func.c,59 :: 		TIMER1_TAMR |= 2;
	R1 <4> <- addr(TIMER1_TAMR)   (midx: 0)
	R1 <4> <- [R1]   (midx: 0)
	R2 <4> <-  R1 | 2   (midx: 2)
	R1 <4> <- addr(TIMER1_TAMR)   (midx: 0)
	[R1] <4> <- R2   (midx: 0)
//inkubator_func.c,60 :: 		TIMER1_TAPR  = 15;
	R2 <4> <- 15   (midx: 0)
	R1 <4> <- addr(TIMER1_TAPR)   (midx: 0)
	[R1] <4> <- R2   (midx: 0)
//inkubator_func.c,61 :: 		TIMER1_TAILR = interval;//50000;
	R1 <4> <- addr(TIMER1_TAILR)   (midx: 0)
   (midx: 0)
	[R1] <4> <- R0   (midx: 0)
//inkubator_func.c,62 :: 		NVIC_IntEnable(IVT_INT_TIMER1A_16_32_bit);
	R0 <4> <- 37   (midx: 0)
	CALL _NVIC_IntEnable   (midx: 0)
//inkubator_func.c,63 :: 		TIMER_IMR_TATOIM_TIMER1_IMR_bit = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(TIMER_IMR_TATOIM_TIMER1_IMR_bit)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//inkubator_func.c,64 :: 		TIMER_CTL_TAEN_TIMER1_CTL_bit = 1;
	R1 <4> <- FLOC_StartTimer1A_10ms+0   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
  end
   (midx: 0)
_StopTimer1A_10ms:
  begin   (midx: 0)
//inkubator_func.c,67 :: 		void StopTimer1A_10ms(){
_StopTimer1A_10ms:
  begin   (midx: 0)
//inkubator_func.c,68 :: 		TIMER_CTL_TAEN_TIMER1_CTL_bit = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(TIMER_CTL_TAEN_TIMER1_CTL_bit)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
//inkubator_func.c,69 :: 		TIMER1_CFG   = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(TIMER1_CFG)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,70 :: 		TIMER1_TAMR  = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(TIMER1_TAMR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,71 :: 		TIMER1_TAPR  = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(TIMER1_TAPR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,72 :: 		TIMER1_TAILR = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(TIMER1_TAILR)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,74 :: 		TIMER_IMR_TATOIM_TIMER1_IMR_bit = 0;
	R0 <4> <- addr(TIMER_IMR_TATOIM_TIMER1_IMR_bit)   (midx: 0)
	[R0] <0> <- R3   (midx: 0)
//inkubator_func.c,75 :: 		TIMER_CTL_TAEN_TIMER1_CTL_bit = 0;
	[R2] <0> <- R3   (midx: 0)
  end
   (midx: 0)
_set_fault:
  begin   (midx: 0)
//inkubator_func.c,1068 :: 		void set_fault(char error_code)
_set_fault:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//inkubator_func.c,1071 :: 		errors[count_error1++]=error_code;
	R3 <4> <- addr(set_fault_count_error1_L0)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	R1 <4> <- #_errors   (midx: 0)
	R1 <4> <-  R1 + R2   (midx: 2)
   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	R1 <4> <- R3   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	R1 <1> <-  R1 + 1   (midx: 0)
	[R3] <1> <- R1   (midx: 0)
//inkubator_func.c,1072 :: 		if(count_error1==255)
	if ( R1 != 255) then goto 230   (midx: 0)
//inkubator_func.c,1074 :: 		for(count_error1=0;count_error1<255;count_error1++)
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(set_fault_count_error1_L0)   (midx: 0)
	[R1] <1> <- R2   (midx: 0)
231:   (midx: 0)
	R1 <4> <- addr(set_fault_count_error1_L0)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	if ( R1 >= 255) then goto 232   (midx: 0)
//inkubator_func.c,1076 :: 		errors[count_error1]=0;
	R3 <4> <- addr(set_fault_count_error1_L0)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	R1 <4> <- #_errors   (midx: 0)
	R2 <4> <-  R1 + R2   (midx: 2)
	R1 <1> <- 0   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//inkubator_func.c,1074 :: 		for(count_error1=0;count_error1<255;count_error1++)
	R1 <4> <- R3   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	R1 <1> <-  R1 + 1   (midx: 0)
	[R3] <1> <- R1   (midx: 0)
//inkubator_func.c,1077 :: 		}
	goto	231   (midx: 0)
232:   (midx: 0)
//inkubator_func.c,1078 :: 		count_error1=0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(set_fault_count_error1_L0)   (midx: 0)
	[R1] <1> <- R2   (midx: 0)
//inkubator_func.c,1079 :: 		}
230:   (midx: 0)
  end
   (midx: 0)
_Read_sensor:
  begin   (midx: 0)
//inkubator_func.c,78 :: 		void Read_sensor()
_Read_sensor:
  begin   (midx: 0)
//inkubator_func.c,81 :: 		if((++read_sensor_count)==20)
	R1 <4> <- addr(Read_sensor_read_sensor_count_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 0   (midx: 0)
//inkubator_func.c,83 :: 		read_sensor_count=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(Read_sensor_read_sensor_count_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,85 :: 		DisableInterrupts();
	CALL _DisableInterrupts   (midx: 0)
//inkubator_func.c,86 :: 		if (AM2302_Read(&rel_humidity, &temperature) == 1)                 // Display AM2302_Read sensor values via TFT
	R1 <4> <- #_temperature   (midx: 0)
	R0 <4> <- #_rel_humidity   (midx: 0)
	CALL _AM2302_Read   (midx: 0)
	if ( R0 != 1) then goto 1   (midx: 0)
//inkubator_func.c,88 :: 		set_fault(4);
	R0 <1> <- 4   (midx: 0)
	CALL _set_fault   (midx: 0)
//inkubator_func.c,92 :: 		}
1:   (midx: 0)
//inkubator_func.c,93 :: 		EnableInterrupts();
	CALL _EnableInterrupts   (midx: 0)
//inkubator_func.c,94 :: 		}
0:   (midx: 0)
  end
   (midx: 0)
_Out_data_in_lcd:
  begin   (midx: 0)
//inkubator_func.c,110 :: 		void Out_data_in_lcd()
_Out_data_in_lcd:
  begin   (midx: 0)
//inkubator_func.c,112 :: 		Lcd_Out(1,1,"Tr");
	R0 <4> <- #?lstr1_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,113 :: 		sprintf(Data_Str,"%-2.1fC",temperature);
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_2_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,114 :: 		Lcd_Out(1,3,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,116 :: 		sprintf(Data_Str,"%-1.1fC%-2.0f%%  ",temperature-parameters_t.set_temperatura,rel_humidity-parameters_t.set_humidity);
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 - S1   (midx: 8)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 - S1   (midx: 8)
	R1 <4> <- #?lstr_3_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_12 <4> <- PUSH(S2)   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,118 :: 		Lcd_Out(2,8,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 8   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,120 :: 		Lcd_Out(1,9,"M");
	R0 <4> <- #?lstr4_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 9   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,121 :: 		if(flag_t.start_fan==SET) Lcd_Out(1,10,"+");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 3   (midx: 21)
	R0 <4> <- #?lstr5_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 10   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
3:   (midx: 0)
//inkubator_func.c,122 :: 		if(flag_t.start_fan==RESET) Lcd_Out(1,10,"-");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 4   (midx: 21)
	R0 <4> <- #?lstr6_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 10   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
4:   (midx: 0)
//inkubator_func.c,124 :: 		Lcd_Out(1,12,"P");
	R0 <4> <- #?lstr7_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 12   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,125 :: 		if(flag_t.start_process==SET) Lcd_Out(1,13,"+");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 5   (midx: 21)
	R0 <4> <- #?lstr8_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 13   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
5:   (midx: 0)
//inkubator_func.c,126 :: 		if(flag_t.start_process==RESET) Lcd_Out(1,13,"-");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 6   (midx: 21)
	R0 <4> <- #?lstr9_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 13   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
6:   (midx: 0)
//inkubator_func.c,128 :: 		Lcd_Out(1,15,"K");
	R0 <4> <- #?lstr10_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 15   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,129 :: 		if(flag_t.cover_status==SET) Lcd_Out(1,16,"+");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 7   (midx: 21)
	R0 <4> <- #?lstr11_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 16   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
7:   (midx: 0)
//inkubator_func.c,130 :: 		if(flag_t.cover_status==RESET) Lcd_Out(1,16,"-");
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 8   (midx: 21)
	R0 <4> <- #?lstr12_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 16   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
8:   (midx: 0)
//inkubator_func.c,131 :: 		Lcd_Out(2,1,"Vr");
	R0 <4> <- #?lstr13_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,133 :: 		sprintf(Data_Str,"%-2.1f%%",rel_humidity);
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_14_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,134 :: 		Lcd_Out(2,3,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
  end
   (midx: 0)
_out_data_to_lcd:
  begin   (midx: 0)
//inkubator_func.c,98 :: 		void out_data_to_lcd()
_out_data_to_lcd:
  begin   (midx: 0)
//inkubator_func.c,101 :: 		if((++count_data)==10)
	R1 <4> <- addr(out_data_to_lcd_count_data_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 10) then goto 2   (midx: 0)
//inkubator_func.c,103 :: 		count_data=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(out_data_to_lcd_count_data_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,104 :: 		Out_data_in_lcd();
	CALL _Out_data_in_lcd   (midx: 0)
//inkubator_func.c,105 :: 		}
2:   (midx: 0)
  end
   (midx: 0)
_key_code_pressed:
  begin   (midx: 0)
//inkubator_func.c,142 :: 		unsigned char key_code_pressed()
_key_code_pressed:
  begin   (midx: 0)
//inkubator_func.c,144 :: 		unsigned char key_value=0;
   (midx: 0)
   (midx: 0)
	R2 <-initialize(0)   (midx: 0)
//inkubator_func.c,145 :: 		if(PIN_UP==RESET)
	R1 <4> <- addr(PIN_UP)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 248   (midx: 21)
//inkubator_func.c,147 :: 		key_value=key_up;
   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,148 :: 		}
	goto	9   (midx: 0)
248:   (midx: 0)
//inkubator_func.c,145 :: 		if(PIN_UP==RESET)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,148 :: 		}
9:   (midx: 0)
//inkubator_func.c,149 :: 		if(PIN_DOWN==RESET)
   (midx: 0)
	R1 <4> <- addr(PIN_DOWN)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 249   (midx: 21)
//inkubator_func.c,151 :: 		key_value=key_down;
   (midx: 0)
	R2 <1> <- 2   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,152 :: 		}
	goto	10   (midx: 0)
249:   (midx: 0)
//inkubator_func.c,149 :: 		if(PIN_DOWN==RESET)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,152 :: 		}
10:   (midx: 0)
//inkubator_func.c,153 :: 		if(PIN_ENTER==RESET)
   (midx: 0)
	R1 <4> <- addr(PIN_ENTER)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 250   (midx: 21)
//inkubator_func.c,155 :: 		key_value=key_enter;
   (midx: 0)
	R2 <1> <- 3   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,156 :: 		}
	goto	11   (midx: 0)
250:   (midx: 0)
//inkubator_func.c,153 :: 		if(PIN_ENTER==RESET)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,156 :: 		}
11:   (midx: 0)
//inkubator_func.c,157 :: 		if(PIN_BACK==RESET)
   (midx: 0)
	R1 <4> <- addr(PIN_BACK)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
   (midx: 0)
	if (R0) then goto 251   (midx: 21)
//inkubator_func.c,159 :: 		key_value=key_back;
   (midx: 0)
   (midx: 0)
	R0 <1> <- 4   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//inkubator_func.c,160 :: 		}
	goto	12   (midx: 0)
251:   (midx: 0)
//inkubator_func.c,157 :: 		if(PIN_BACK==RESET)
	R0 <1> <- R2   (midx: 0)
//inkubator_func.c,160 :: 		}
12:   (midx: 0)
//inkubator_func.c,161 :: 		return (key_value);
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_read_data_in_eeprom:
  begin   (midx: 0)
//inkubator_func.c,501 :: 		char read_data_in_eeprom()
_read_data_in_eeprom:
  begin   (midx: 0)
//inkubator_func.c,503 :: 		unsigned long temp=0,temp1=0;
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <-initialize(0)   (midx: 0)
//inkubator_func.c,504 :: 		char position=0;
   (midx: 0)
//inkubator_func.c,505 :: 		DisableInterrupts();
	CALL _DisableInterrupts   (midx: 0)
//inkubator_func.c,506 :: 		for(position=0;position<DATA_SIZE;position++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R6 <4> <- R6   (midx: 0)
	R2 <1> <- R2   (midx: 0)
104:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R2 >= 10) then goto 105   (midx: 0)
//inkubator_func.c,508 :: 		ee_data[position]=0;
	R1 <4> <-  R2 shl 2   (midx: 2)
	R0 <4> <- #_ee_data   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- 0   (midx: 0)
	[R1] <4> <- R0   (midx: 0)
//inkubator_func.c,506 :: 		for(position=0;position<DATA_SIZE;position++)
	R2 <1> <-  R2 + 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,509 :: 		}
   (midx: 0)
	R6 <4> <- R6   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	goto	104   (midx: 0)
105:   (midx: 0)
//inkubator_func.c,512 :: 		EEPROM_Read(ee_Data, START_ADDRESS, BLOCK_SIZE);
	R2 <2> <- 64   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- #_ee_data   (midx: 0)
	CALL _EEPROM_Read   (midx: 0)
//inkubator_func.c,513 :: 		EnableInterrupts();
	CALL _EnableInterrupts   (midx: 0)
//inkubator_func.c,514 :: 		for(position=0;position<8;position++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R3 <4> <- R6   (midx: 0)
	R2 <1> <- R2   (midx: 0)
107:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R2 >= 8) then goto 108   (midx: 0)
//inkubator_func.c,516 :: 		temp1+=ee_data[position];
	R1 <4> <-  R2 shl 2   (midx: 2)
	R0 <4> <- #_ee_data   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- *R0   (midx: 0)
	R3 <4> <-  R3 + R0   (midx: 2)
	R3 <4> <- R3   (midx: 0)
//inkubator_func.c,514 :: 		for(position=0;position<8;position++)
	R2 <1> <-  R2 + 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,517 :: 		}
   (midx: 0)
	R3 <4> <- R3   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	goto	107   (midx: 0)
108:   (midx: 0)
//inkubator_func.c,518 :: 		temp=ee_data[8];
	R0 <4> <- addr(_ee_data+32)   (midx: 0)
   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
//inkubator_func.c,520 :: 		if(temp==temp1)
	R0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R0 != R3) then goto 110   (midx: 2)
//inkubator_func.c,522 :: 		parameters_t.set_temperatura=                                             (float)((float)ee_data[0]/100.0);
	R0 <4> <- addr(_ee_data)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,523 :: 		parameters_t.set_humidity=                                                (float)((float)ee_data[1]/100.0);
	R0 <4> <- addr(_ee_data+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,524 :: 		parameters_t.set_turn_time=                                               (float)((float)ee_data[2]/100.0);
	R0 <4> <- addr(_ee_data+8)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,525 :: 		parameters_t.temperatura_delta__alarm_level=                              (float)((float)ee_data[3]/100.0);
	R0 <4> <- addr(_ee_data+12)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,526 :: 		parameters_t.humidity_delta_alarm_level=                                  (float)((float)ee_data[4]/100.0);
	R0 <4> <- addr(_ee_data+16)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,527 :: 		parameters_t.control_humidity=                                            (float)((float)ee_data[5]/100.0);
	R0 <4> <- addr(_ee_data+20)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,530 :: 		return 0;
	R0 <1> <- 0   (midx: 0)
	return   (midx: 0)
//inkubator_func.c,531 :: 		}
110:   (midx: 0)
//inkubator_func.c,532 :: 		if(temp!=temp1)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R1 = R3) then goto 111   (midx: 2)
//inkubator_func.c,534 :: 		return 1;
	R0 <1> <- 1   (midx: 0)
	return   (midx: 0)
//inkubator_func.c,535 :: 		}
111:   (midx: 0)
  end
   (midx: 0)
_save_data_to_eeprom:
  begin   (midx: 0)
//inkubator_func.c,468 :: 		char save_data_to_eeprom()
_save_data_to_eeprom:
  begin   (midx: 0)
//inkubator_func.c,470 :: 		char position=0;
   (midx: 0)
//inkubator_func.c,471 :: 		unsigned long temp=0,adress=0;
   (midx: 0)
   (midx: 0)
	R2 <-initialize(0)   (midx: 0)
   (midx: 0)
//inkubator_func.c,473 :: 		for(position=0;position<DATA_SIZE;position++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- R2   (midx: 0)
	R3 <1> <- R3   (midx: 0)
98:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R3 >= 10) then goto 99   (midx: 0)
//inkubator_func.c,475 :: 		ee_data[position]=0;
	R1 <4> <-  R3 shl 2   (midx: 2)
	R0 <4> <- #_ee_data   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- 0   (midx: 0)
	[R1] <4> <- R0   (midx: 0)
//inkubator_func.c,473 :: 		for(position=0;position<DATA_SIZE;position++)
	R3 <1> <-  R3 + 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
//inkubator_func.c,476 :: 		}
   (midx: 0)
	R2 <4> <- R2   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	goto	98   (midx: 0)
99:   (midx: 0)
//inkubator_func.c,477 :: 		ee_data[0]=(unsigned long)(parameters_t.set_temperatura*100.0);
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,478 :: 		ee_data[1]=(unsigned long)(parameters_t.set_humidity*100.0);
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data+4)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,479 :: 		ee_data[2]=(unsigned long)(parameters_t.set_turn_time*100.0);
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data+8)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,480 :: 		ee_data[3]=(unsigned long)(parameters_t.temperatura_delta__alarm_level*100.0);
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data+12)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,481 :: 		ee_data[4]=(unsigned long)(parameters_t.humidity_delta_alarm_level*100.0);
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data+16)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,482 :: 		ee_data[5]=(unsigned long)(parameters_t.control_humidity*100.0);
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ee_data+20)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,483 :: 		ee_data[6]=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ee_data+24)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,484 :: 		ee_data[7]=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ee_data+28)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,485 :: 		for(position=0;position<8;position++)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- 0   (midx: 0)
	R7 <4> <- R2   (midx: 0)
	R2 <1> <- R0   (midx: 0)
101:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R2 >= 8) then goto 102   (midx: 0)
//inkubator_func.c,487 :: 		temp+=ee_data[position];
	R1 <4> <-  R2 shl 2   (midx: 2)
	R0 <4> <- #_ee_data   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- *R0   (midx: 0)
	R7 <4> <-  R7 + R0   (midx: 2)
	R7 <4> <- R7   (midx: 0)
//inkubator_func.c,485 :: 		for(position=0;position<8;position++)
	R2 <1> <-  R2 + 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,488 :: 		}
   (midx: 0)
	R7 <4> <- R7   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	goto	101   (midx: 0)
102:   (midx: 0)
//inkubator_func.c,489 :: 		ee_data[8]=temp;
	R0 <4> <- addr(_ee_data+32)   (midx: 0)
   (midx: 0)
	[R0] <4> <- R7   (midx: 0)
//inkubator_func.c,490 :: 		DisableInterrupts();
	CALL _DisableInterrupts   (midx: 0)
//inkubator_func.c,492 :: 		EEPROM_Init();
	CALL _EEPROM_Init   (midx: 0)
//inkubator_func.c,494 :: 		EEPROM_MassErase();
	CALL _EEPROM_MassErase   (midx: 0)
//inkubator_func.c,495 :: 		EEPROM_Program(ee_Data, START_ADDRESS, BLOCK_SIZE);
	R2 <2> <- 64   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- #_ee_data   (midx: 0)
	CALL _EEPROM_Program   (midx: 0)
//inkubator_func.c,496 :: 		EnableInterrupts();
	CALL _EnableInterrupts   (midx: 0)
//inkubator_func.c,497 :: 		return read_data_in_eeprom();
	CALL _read_data_in_eeprom   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_save_data_exit:
  begin   (midx: 0)
//inkubator_func.c,422 :: 		void save_data_exit()
_save_data_exit:
  begin   (midx: 0)
//inkubator_func.c,424 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,425 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,426 :: 		save_data_to_eeprom();
	CALL _save_data_to_eeprom   (midx: 0)
//inkubator_func.c,427 :: 		Delay_ms(1000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//inkubator_func.c,428 :: 		Lcd_Out(1,6,"DANYE");
	R0 <4> <- #?lstr40_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,429 :: 		Lcd_Out(2,5,"ZAPISANY");
	R0 <4> <- #?lstr41_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 5   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,430 :: 		Delay_ms(1000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//inkubator_func.c,431 :: 		Lcd_Cmd(_LCD_CLEAR);
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,432 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
  end
   (midx: 0)
_out_lcd_errors:
  begin   (midx: 0)
//inkubator_func.c,1042 :: 		void out_lcd_errors(unsigned char position)
_out_lcd_errors:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <1> <- R0   (midx: 0)
   (midx: 0)
//inkubator_func.c,1044 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,1045 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,1046 :: 		Lcd_Out(1,6,"OSHIBKI");
	R1 <4> <- #?lstr50_inkubator_func   (midx: 0)
	R2 <4> <- R1   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,1047 :: 		if(errors[position]==0)
	R1 <4> <- #_errors   (midx: 0)
	R1 <4> <-  R1 + R6   (midx: 2)
	R1 <1> <- *R1   (midx: 0)
   (midx: 0)
	if ( R1 != 0) then goto 225   (midx: 0)
//inkubator_func.c,1049 :: 		Lcd_Out(2,1,"NET OSHIBOK...");
	R1 <4> <- #?lstr51_inkubator_func   (midx: 0)
	R2 <4> <- R1   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,1050 :: 		}
	goto	226   (midx: 0)
225:   (midx: 0)
//inkubator_func.c,1053 :: 		Lcd_Out(2,1,message[errors[position]]);
   (midx: 0)
	R1 <4> <- #_errors   (midx: 0)
   (midx: 0)
	R1 <4> <-  R1 + R6   (midx: 2)
	R1 <1> <- *R1   (midx: 0)
	R2 <4> <-  R1 shl 2   (midx: 2)
	R1 <4> <- #_message   (midx: 0)
	R1 <4> <-  R1 + R2   (midx: 2)
	R1 <4> <- *R1   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R2 <4> <- R1   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,1054 :: 		}
226:   (midx: 0)
  end
   (midx: 0)
_set_errors:
  begin   (midx: 0)
//inkubator_func.c,982 :: 		void set_errors()
_set_errors:
  begin   (midx: 0)
//inkubator_func.c,984 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_errors_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,985 :: 		char go=0;
   (midx: 0)
	set_errors_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,986 :: 		unsigned char position=0,pos=0;
   (midx: 0)
	set_errors_position_L0 <-initialize(0)   (midx: 0)
   (midx: 0)
//inkubator_func.c,987 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,988 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,989 :: 		Lcd_Out(1,4,"OSHIBKI");
	R0 <4> <- #?lstr48_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 4   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,990 :: 		out_lcd_errors(position);
	R0 <1> <- set_errors_position_L0   (midx: 0)
	CALL _out_lcd_errors   (midx: 0)
//inkubator_func.c,991 :: 		while(kp==0)
204:   (midx: 0)
	R0 <1> <- set_errors_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 205   (midx: 0)
//inkubator_func.c,993 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 206   (midx: 21)
//inkubator_func.c,995 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,996 :: 		}
206:   (midx: 0)
//inkubator_func.c,997 :: 		switch(key_value)
	goto	207   (midx: 0)
//inkubator_func.c,999 :: 		case key_up:          key_value=0;
209:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,1000 :: 		if(position==0)
	R0 <1> <- set_errors_position_L0   (midx: 0)
	if ( R0 != 0) then goto 210   (midx: 0)
//inkubator_func.c,1002 :: 		position=0;
	R0 <1> <- 0   (midx: 0)
	set_errors_position_L0 <1> <- R0   (midx: 0)
//inkubator_func.c,1003 :: 		}
	goto	211   (midx: 0)
210:   (midx: 0)
//inkubator_func.c,1006 :: 		position--;
	R0 <1> <- set_errors_position_L0   (midx: 0)
	R0 <1> <-  R0 - 1   (midx: 0)
	set_errors_position_L0 <1> <- R0   (midx: 0)
//inkubator_func.c,1007 :: 		}
211:   (midx: 0)
//inkubator_func.c,1008 :: 		out_lcd_errors(position);                    break;
	R0 <1> <- set_errors_position_L0   (midx: 0)
	CALL _out_lcd_errors   (midx: 0)
	goto	208   (midx: 0)
//inkubator_func.c,1010 :: 		case key_down:        key_value=0; position++;
212:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- set_errors_position_L0   (midx: 0)
	R1 <1> <-  R0 + 1   (midx: 0)
	set_errors_position_L0 <1> <- R1   (midx: 0)
//inkubator_func.c,1011 :: 		if(errors[position]==0)
	R0 <4> <- #_errors   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 != 0) then goto 213   (midx: 0)
//inkubator_func.c,1013 :: 		position=position;
	R0 <1> <- set_errors_position_L0   (midx: 0)
	set_errors_position_L0 <1> <- R0   (midx: 0)
//inkubator_func.c,1014 :: 		}
213:   (midx: 0)
//inkubator_func.c,1015 :: 		if(position==255)
	R0 <1> <- set_errors_position_L0   (midx: 0)
	if ( R0 != 255) then goto 214   (midx: 0)
//inkubator_func.c,1017 :: 		for(pos=0;pos<255;pos++)
   (midx: 0)
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R2 <1> <- R2   (midx: 0)
215:   (midx: 0)
   (midx: 0)
	if ( R2 >= 255) then goto 216   (midx: 0)
//inkubator_func.c,1019 :: 		errors[pos]=0;
	R0 <4> <- #_errors   (midx: 0)
	R1 <4> <-  R0 + R2   (midx: 2)
	R0 <1> <- 0   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//inkubator_func.c,1017 :: 		for(pos=0;pos<255;pos++)
   (midx: 0)
	R0 <1> <-  R2 + 1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//inkubator_func.c,1020 :: 		}
   (midx: 0)
	R2 <1> <- R0   (midx: 0)
	goto	215   (midx: 0)
216:   (midx: 0)
//inkubator_func.c,1022 :: 		}
214:   (midx: 0)
//inkubator_func.c,1023 :: 		out_lcd_errors(position);
	R0 <1> <- set_errors_position_L0   (midx: 0)
	CALL _out_lcd_errors   (midx: 0)
//inkubator_func.c,1024 :: 		break;
	goto	208   (midx: 0)
//inkubator_func.c,1025 :: 		case key_enter:       key_value=0;   for(pos=0;pos<255;pos++)
218:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R2 <1> <- R2   (midx: 0)
219:   (midx: 0)
   (midx: 0)
	if ( R2 >= 255) then goto 220   (midx: 0)
//inkubator_func.c,1027 :: 		errors[pos]=0;
	R0 <4> <- #_errors   (midx: 0)
	R1 <4> <-  R0 + R2   (midx: 2)
	R0 <1> <- 0   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//inkubator_func.c,1025 :: 		case key_enter:       key_value=0;   for(pos=0;pos<255;pos++)
   (midx: 0)
	R0 <1> <-  R2 + 1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//inkubator_func.c,1028 :: 		}
   (midx: 0)
	R2 <1> <- R0   (midx: 0)
	goto	219   (midx: 0)
220:   (midx: 0)
//inkubator_func.c,1030 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,1031 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,1032 :: 		Lcd_Out(1,2,"OSHIBKI STERTY");
	R0 <4> <- #?lstr49_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 2   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,1033 :: 		Delay_ms(1000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//inkubator_func.c,1034 :: 		go=1;kp=1;             break;
	R0 <1> <- 1   (midx: 0)
	set_errors_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_errors_kp_L0 <1> <- R0   (midx: 0)
	goto	208   (midx: 0)
//inkubator_func.c,1035 :: 		case key_back:        key_value=0; kp=1;   Lcd_Cmd(_LCD_CLEAR);
223:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_errors_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,1036 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                              break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	208   (midx: 0)
//inkubator_func.c,1037 :: 		}
207:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 209   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 212   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 218   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 223   (midx: 0)
208:   (midx: 0)
//inkubator_func.c,1038 :: 		}
	goto	204   (midx: 0)
205:   (midx: 0)
//inkubator_func.c,1039 :: 		if(go==SET) set_temperature();
	R0 <1> <- set_errors_go_L0   (midx: 0)
	if ( R0 != 1) then goto 224   (midx: 0)
	CALL _set_temperature   (midx: 0)
224:   (midx: 0)
  end
   (midx: 0)
_save_data:
  begin   (midx: 0)
//inkubator_func.c,435 :: 		void save_data()
_save_data:
  begin   (midx: 0)
//inkubator_func.c,437 :: 		char kp=0;
   (midx: 0)
   (midx: 0)
	R6 <-initialize(0)   (midx: 0)
//inkubator_func.c,438 :: 		char go=0;
   (midx: 0)
   (midx: 0)
	R8 <-initialize(0)   (midx: 0)
//inkubator_func.c,439 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,440 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,441 :: 		Lcd_Out(1,3,"ZAPIS DANYH");
	R0 <4> <- #?lstr42_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,442 :: 		Lcd_Out(2,7,"NET.  ");
	R0 <4> <- #?lstr43_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,443 :: 		flag_t.data_save=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,444 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
   (midx: 0)
   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R8   (midx: 0)
//inkubator_func.c,445 :: 		while(kp==0)
87:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R6 != 0) then goto 88   (midx: 0)
//inkubator_func.c,447 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 89   (midx: 21)
//inkubator_func.c,449 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,450 :: 		}
89:   (midx: 0)
//inkubator_func.c,451 :: 		switch(key_value)
	goto	90   (midx: 0)
//inkubator_func.c,453 :: 		case key_up:          key_value=0; Lcd_Out(2,7,"DA .  "); flag_t.data_save=SET;                      break;
92:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- #?lstr44_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	goto	91   (midx: 0)
//inkubator_func.c,454 :: 		case key_down:        key_value=0; Lcd_Out(2,7,"NET.  ");  flag_t.data_save=RESET;                   break;
93:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- #?lstr45_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
   (midx: 0)
   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	goto	91   (midx: 0)
//inkubator_func.c,455 :: 		case key_enter:       key_value=0;go=1;kp=1;                                                       break;
94:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- 1   (midx: 0)
   (midx: 0)
	R1 <1> <- 1   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <1> <- R0   (midx: 0)
	R6 <1> <- R1   (midx: 0)
	goto	91   (midx: 0)
//inkubator_func.c,456 :: 		case key_back:        key_value=0;kp=1;    Lcd_Cmd(_LCD_CLEAR);
95:   (midx: 0)
   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
   (midx: 0)
	R3 <1> <- 1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,457 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                               break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R3   (midx: 0)
	goto	91   (midx: 0)
//inkubator_func.c,458 :: 		}
90:   (midx: 0)
   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 92   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 93   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 94   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R0 = 4) then goto 95   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R6   (midx: 0)
91:   (midx: 0)
//inkubator_func.c,459 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	goto	87   (midx: 0)
88:   (midx: 0)
//inkubator_func.c,460 :: 		if(flag_t.data_save==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 96   (midx: 21)
//inkubator_func.c,462 :: 		save_data_exit();
	CALL _save_data_exit   (midx: 0)
//inkubator_func.c,463 :: 		}
96:   (midx: 0)
//inkubator_func.c,464 :: 		if(go==SET) set_errors();
   (midx: 0)
	if ( R8 != 1) then goto 97   (midx: 0)
	CALL _set_errors   (midx: 0)
97:   (midx: 0)
  end
   (midx: 0)
_set_humidity_control:
  begin   (midx: 0)
//inkubator_func.c,386 :: 		void set_humidity_control()
_set_humidity_control:
  begin   (midx: 0)
//inkubator_func.c,388 :: 		char kp=0;
   (midx: 0)
   (midx: 0)
	R8 <-initialize(0)   (midx: 0)
//inkubator_func.c,389 :: 		char go=0;
   (midx: 0)
   (midx: 0)
	R6 <-initialize(0)   (midx: 0)
//inkubator_func.c,390 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,391 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,392 :: 		Lcd_Out(1,3,"CTRL VLAJNOSTY");
	R0 <4> <- #?lstr35_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,393 :: 		if(parameters_t.control_humidity==0.0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 != 0.000000E+000) then goto 73   (midx: 9)
//inkubator_func.c,395 :: 		flag_t.control_humidity=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,396 :: 		Lcd_Out(2,7,"NET.  ");
	R0 <4> <- #?lstr36_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,397 :: 		}
73:   (midx: 0)
//inkubator_func.c,398 :: 		if(parameters_t.control_humidity==1.0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+000   (midx: 0)
	if ( S1 != S0) then goto 74   (midx: 9)
//inkubator_func.c,400 :: 		flag_t.control_humidity=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,401 :: 		Lcd_Out(2,7,"DA .  ");
	R0 <4> <- #?lstr37_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,402 :: 		}
74:   (midx: 0)
//inkubator_func.c,403 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
   (midx: 0)
   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R6   (midx: 0)
//inkubator_func.c,404 :: 		while(kp==0)
75:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R8 != 0) then goto 76   (midx: 0)
//inkubator_func.c,406 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 77   (midx: 21)
//inkubator_func.c,408 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,409 :: 		}
77:   (midx: 0)
//inkubator_func.c,410 :: 		switch(key_value)
	goto	78   (midx: 0)
//inkubator_func.c,412 :: 		case key_up:          key_value=0; Lcd_Out(2,7,"DA .  "); flag_t.control_humidity=SET;parameters_t.control_humidity=1.0;     break;
80:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- #?lstr38_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
	S0 <4> <- 1.000000E+000   (midx: 0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	goto	79   (midx: 0)
//inkubator_func.c,413 :: 		case key_down:        key_value=0; Lcd_Out(2,7,"NET.  ");  flag_t.control_humidity=RESET; parameters_t.control_humidity=0.0; break;
81:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- #?lstr39_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 7   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	goto	79   (midx: 0)
//inkubator_func.c,414 :: 		case key_enter:       key_value=0;go=1;kp=1;                                                                               break;
82:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- 1   (midx: 0)
   (midx: 0)
	R1 <1> <- 1   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <1> <- R0   (midx: 0)
	R8 <1> <- R1   (midx: 0)
	goto	79   (midx: 0)
//inkubator_func.c,415 :: 		case key_back:        key_value=0;kp=1;    Lcd_Cmd(_LCD_CLEAR);
83:   (midx: 0)
   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
   (midx: 0)
	R3 <1> <- 1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,416 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                                                       break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R3   (midx: 0)
	goto	79   (midx: 0)
//inkubator_func.c,417 :: 		}
78:   (midx: 0)
   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 80   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 81   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 82   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R0 = 4) then goto 83   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	R8 <1> <- R8   (midx: 0)
79:   (midx: 0)
//inkubator_func.c,418 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <1> <- R6   (midx: 0)
	goto	75   (midx: 0)
76:   (midx: 0)
//inkubator_func.c,419 :: 		if(go==SET) save_data();
   (midx: 0)
	if ( R6 != 1) then goto 84   (midx: 0)
	CALL _save_data   (midx: 0)
84:   (midx: 0)
  end
   (midx: 0)
_set_turn_time:
  begin   (midx: 0)
//inkubator_func.c,343 :: 		void set_turn_time()
_set_turn_time:
  begin   (midx: 0)
//inkubator_func.c,345 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_turn_time_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,346 :: 		char go=0;
   (midx: 0)
	set_turn_time_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,347 :: 		unsigned char key_code=0;
   (midx: 0)
//inkubator_func.c,348 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,349 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,350 :: 		Lcd_Out(1,6,"VREMYA");
	R0 <4> <- #?lstr31_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,351 :: 		sprintf(Data_Str,"%-3.1f min",parameters_t.set_turn_time);
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_32_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,352 :: 		Lcd_Out(2,5,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 5   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,353 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,354 :: 		while(kp==0)
61:   (midx: 0)
	R0 <1> <- set_turn_time_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 62   (midx: 0)
//inkubator_func.c,356 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 63   (midx: 21)
//inkubator_func.c,358 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,359 :: 		}
63:   (midx: 0)
//inkubator_func.c,360 :: 		switch(key_value)
	goto	64   (midx: 0)
//inkubator_func.c,362 :: 		case key_up:           key_value=0; parameters_t.set_turn_time=parameters_t.set_turn_time+10.0;
66:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,363 :: 		if(parameters_t.set_turn_time>=120.0)
	R0 <4> <- 1.200000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	if ( S1 < S0) then goto 67   (midx: 9)
//inkubator_func.c,365 :: 		parameters_t.set_turn_time=120.0;
	R0 <4> <- 1.200000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,366 :: 		}
67:   (midx: 0)
//inkubator_func.c,367 :: 		sprintf(Data_Str,"%-3.1f min  ",parameters_t.set_turn_time);
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_33_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,368 :: 		Lcd_Out(2,5,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 5   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	65   (midx: 0)
//inkubator_func.c,370 :: 		case key_down:            key_value=0;parameters_t.set_turn_time=parameters_t.set_turn_time-10.0;
68:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,371 :: 		if(parameters_t.set_turn_time<=10.0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	if ( S1 > S0) then goto 69   (midx: 9)
//inkubator_func.c,373 :: 		parameters_t.set_turn_time=10.0;
	S0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,374 :: 		}
69:   (midx: 0)
//inkubator_func.c,375 :: 		sprintf(Data_Str,"%-3.1f min  ",parameters_t.set_turn_time);
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_34_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,376 :: 		Lcd_Out(2,5,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 5   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	65   (midx: 0)
//inkubator_func.c,377 :: 		case key_enter:           key_value=0;  go=1; kp=1; break;
70:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_turn_time_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_turn_time_kp_L0 <1> <- R0   (midx: 0)
	goto	65   (midx: 0)
//inkubator_func.c,378 :: 		case key_back:           key_value=0;kp=1; Lcd_Cmd(_LCD_CLEAR);               // Clear display
71:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_turn_time_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,379 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	65   (midx: 0)
//inkubator_func.c,380 :: 		}
64:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 66   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 68   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 70   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 71   (midx: 0)
65:   (midx: 0)
//inkubator_func.c,382 :: 		}
	goto	61   (midx: 0)
62:   (midx: 0)
//inkubator_func.c,383 :: 		if(go==SET) set_humidity_control();
	R0 <1> <- set_turn_time_go_L0   (midx: 0)
	if ( R0 != 1) then goto 72   (midx: 0)
	CALL _set_humidity_control   (midx: 0)
72:   (midx: 0)
  end
   (midx: 0)
_set_humidity_gist:
  begin   (midx: 0)
//inkubator_func.c,299 :: 		void set_humidity_gist()
_set_humidity_gist:
  begin   (midx: 0)
//inkubator_func.c,301 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_humidity_gist_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,302 :: 		char go=0;
   (midx: 0)
	set_humidity_gist_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,303 :: 		unsigned char key_code=0;
   (midx: 0)
//inkubator_func.c,304 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,305 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,306 :: 		Lcd_Out(1,3,"VLAJNOST GIST");
	R0 <4> <- #?lstr27_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,307 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.humidity_delta_alarm_level);
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_28_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,308 :: 		Lcd_Out(2,6,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,309 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,310 :: 		while(kp==0)
49:   (midx: 0)
	R0 <1> <- set_humidity_gist_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 50   (midx: 0)
//inkubator_func.c,312 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 51   (midx: 21)
//inkubator_func.c,314 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,315 :: 		}
51:   (midx: 0)
//inkubator_func.c,316 :: 		switch(key_value)
	goto	52   (midx: 0)
//inkubator_func.c,318 :: 		case key_up:           key_value=0; parameters_t.humidity_delta_alarm_level=parameters_t.humidity_delta_alarm_level+10.0;
54:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,319 :: 		if(parameters_t.humidity_delta_alarm_level>=90.0)
	R0 <4> <- 9.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	if ( S1 < S0) then goto 55   (midx: 9)
//inkubator_func.c,321 :: 		parameters_t.humidity_delta_alarm_level=90.0;
	R0 <4> <- 9.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,322 :: 		}
55:   (midx: 0)
//inkubator_func.c,323 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.humidity_delta_alarm_level);
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_29_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,324 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	53   (midx: 0)
//inkubator_func.c,326 :: 		case key_down:            key_value=0;parameters_t.humidity_delta_alarm_level=parameters_t.humidity_delta_alarm_level-10.0;
56:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,327 :: 		if(parameters_t.humidity_delta_alarm_level<=10.0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	if ( S1 > S0) then goto 57   (midx: 9)
//inkubator_func.c,329 :: 		parameters_t.humidity_delta_alarm_level=10.0;
	S0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,330 :: 		}
57:   (midx: 0)
//inkubator_func.c,331 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.humidity_delta_alarm_level);
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_30_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,332 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	53   (midx: 0)
//inkubator_func.c,333 :: 		case key_enter:           key_value=0;  go=1; kp=1; break;
58:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_gist_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_gist_kp_L0 <1> <- R0   (midx: 0)
	goto	53   (midx: 0)
//inkubator_func.c,334 :: 		case key_back:           key_value=0;kp=1; Lcd_Cmd(_LCD_CLEAR);               // Clear display
59:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_gist_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,335 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	53   (midx: 0)
//inkubator_func.c,336 :: 		}
52:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 54   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 56   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 58   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 59   (midx: 0)
53:   (midx: 0)
//inkubator_func.c,338 :: 		}
	goto	49   (midx: 0)
50:   (midx: 0)
//inkubator_func.c,339 :: 		if(go==SET)  set_turn_time();
	R0 <1> <- set_humidity_gist_go_L0   (midx: 0)
	if ( R0 != 1) then goto 60   (midx: 0)
	CALL _set_turn_time   (midx: 0)
60:   (midx: 0)
  end
   (midx: 0)
_set_temperature_gist:
  begin   (midx: 0)
//inkubator_func.c,254 :: 		void set_temperature_gist()
_set_temperature_gist:
  begin   (midx: 0)
//inkubator_func.c,256 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_temperature_gist_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,257 :: 		char go=0;
   (midx: 0)
	set_temperature_gist_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,258 :: 		unsigned char key_code=0;
   (midx: 0)
//inkubator_func.c,259 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,260 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,261 :: 		Lcd_Out(1,1,"TEMPERATURA GIST");
	R0 <4> <- #?lstr23_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,262 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.temperatura_delta__alarm_level);
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_24_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,263 :: 		Lcd_Out(2,6,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,264 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,265 :: 		while(kp==0)
37:   (midx: 0)
	R0 <1> <- set_temperature_gist_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 38   (midx: 0)
//inkubator_func.c,267 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 39   (midx: 21)
//inkubator_func.c,269 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,270 :: 		}
39:   (midx: 0)
//inkubator_func.c,271 :: 		switch(key_value)
	goto	40   (midx: 0)
//inkubator_func.c,273 :: 		case key_up:           key_value=0; parameters_t.temperatura_delta__alarm_level=parameters_t.temperatura_delta__alarm_level+1.0;
42:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+000   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,274 :: 		if(parameters_t.temperatura_delta__alarm_level>=5.0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	if ( S1 < S0) then goto 43   (midx: 9)
//inkubator_func.c,276 :: 		parameters_t.temperatura_delta__alarm_level=5.0;
	S0 <4> <- 5.000000E+000   (midx: 0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,277 :: 		}
43:   (midx: 0)
//inkubator_func.c,278 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.temperatura_delta__alarm_level);
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_25_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,279 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	41   (midx: 0)
//inkubator_func.c,281 :: 		case key_down:            key_value=0;parameters_t.temperatura_delta__alarm_level=parameters_t.temperatura_delta__alarm_level-1.0;
44:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,282 :: 		if(parameters_t.temperatura_delta__alarm_level<=1.0)
	S0 <4> <- 1.000000E+000   (midx: 0)
	if ( S1 > S0) then goto 45   (midx: 9)
//inkubator_func.c,284 :: 		parameters_t.temperatura_delta__alarm_level=1.0;
	S0 <4> <- 1.000000E+000   (midx: 0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,285 :: 		}
45:   (midx: 0)
//inkubator_func.c,286 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.temperatura_delta__alarm_level);
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_26_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,287 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	41   (midx: 0)
//inkubator_func.c,288 :: 		case key_enter:           key_value=0;  go=1; kp=1; break;
46:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_gist_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_gist_kp_L0 <1> <- R0   (midx: 0)
	goto	41   (midx: 0)
//inkubator_func.c,289 :: 		case key_back:           key_value=0;kp=1;  Lcd_Cmd(_LCD_CLEAR);               // Clear display
47:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_gist_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,290 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);               break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	41   (midx: 0)
//inkubator_func.c,291 :: 		}
40:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 42   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 44   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 46   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 47   (midx: 0)
41:   (midx: 0)
//inkubator_func.c,293 :: 		}
	goto	37   (midx: 0)
38:   (midx: 0)
//inkubator_func.c,294 :: 		if(go==SET)  set_humidity_gist();
	R0 <1> <- set_temperature_gist_go_L0   (midx: 0)
	if ( R0 != 1) then goto 48   (midx: 0)
	CALL _set_humidity_gist   (midx: 0)
48:   (midx: 0)
  end
   (midx: 0)
_set_humidity:
  begin   (midx: 0)
//inkubator_func.c,209 :: 		void set_humidity()
_set_humidity:
  begin   (midx: 0)
//inkubator_func.c,211 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_humidity_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,212 :: 		char go=0;
   (midx: 0)
	set_humidity_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,213 :: 		unsigned char key_code=0;
   (midx: 0)
//inkubator_func.c,214 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,215 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,216 :: 		Lcd_Out(1,5,"VLAJNOST");
	R0 <4> <- #?lstr19_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 5   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,217 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.set_humidity);
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_20_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,218 :: 		Lcd_Out(2,6,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,219 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,220 :: 		while(kp==0)
25:   (midx: 0)
	R0 <1> <- set_humidity_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 26   (midx: 0)
//inkubator_func.c,222 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 27   (midx: 21)
//inkubator_func.c,224 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,225 :: 		}
27:   (midx: 0)
//inkubator_func.c,226 :: 		switch(key_value)
	goto	28   (midx: 0)
//inkubator_func.c,228 :: 		case key_up:           key_value=0; parameters_t.set_humidity=parameters_t.set_humidity+10.0;
30:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,229 :: 		if(parameters_t.set_humidity>=90.0)
	R0 <4> <- 9.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	if ( S1 < S0) then goto 31   (midx: 9)
//inkubator_func.c,231 :: 		parameters_t.set_humidity=90.0;
	R0 <4> <- 9.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,232 :: 		}
31:   (midx: 0)
//inkubator_func.c,233 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.set_humidity);
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_21_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,234 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	29   (midx: 0)
//inkubator_func.c,236 :: 		case key_down:            key_value=0;parameters_t.set_humidity=parameters_t.set_humidity-10.0;
32:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	[R0] <4> <- S1   (midx: 0)
//inkubator_func.c,237 :: 		if(parameters_t.set_humidity<=10.0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	if ( S1 > S0) then goto 33   (midx: 9)
//inkubator_func.c,239 :: 		parameters_t.set_humidity=10.0;
	S0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,240 :: 		}
33:   (midx: 0)
//inkubator_func.c,241 :: 		sprintf(Data_Str,"%-2.1f %%",parameters_t.set_humidity);
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_22_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,242 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	29   (midx: 0)
//inkubator_func.c,243 :: 		case key_enter:           key_value=0;  go=1; kp=1; break;
34:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_kp_L0 <1> <- R0   (midx: 0)
	goto	29   (midx: 0)
//inkubator_func.c,244 :: 		case key_back:           key_value=0;kp=1; Lcd_Cmd(_LCD_CLEAR);               // Clear display
35:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_humidity_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,245 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	29   (midx: 0)
//inkubator_func.c,246 :: 		}
28:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 30   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 32   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 34   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 35   (midx: 0)
29:   (midx: 0)
//inkubator_func.c,248 :: 		}
	goto	25   (midx: 0)
26:   (midx: 0)
//inkubator_func.c,249 :: 		if(go==SET)  set_temperature_gist();
	R0 <1> <- set_humidity_go_L0   (midx: 0)
	if ( R0 != 1) then goto 36   (midx: 0)
	CALL _set_temperature_gist   (midx: 0)
36:   (midx: 0)
  end
   (midx: 0)
_set_temperature:
  begin   (midx: 0)
//inkubator_func.c,164 :: 		void set_temperature()
_set_temperature:
  begin   (midx: 0)
//inkubator_func.c,166 :: 		char kp=0;
   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	set_temperature_kp_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,167 :: 		char go=0;
   (midx: 0)
	set_temperature_go_L0 <-initialize(0)   (midx: 0)
//inkubator_func.c,168 :: 		unsigned char key_code=0;
   (midx: 0)
//inkubator_func.c,169 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,170 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,171 :: 		Lcd_Out(1,3,"TEMPERATURA");
	R0 <4> <- #?lstr15_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 3   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,172 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.set_temperatura);
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_16_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,173 :: 		Lcd_Out(2,6,Data_Str);
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,174 :: 		key_value=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,175 :: 		while(kp==0)
13:   (midx: 0)
	R0 <1> <- set_temperature_kp_L0   (midx: 0)
	if ( R0 != 0) then goto 14   (midx: 0)
//inkubator_func.c,177 :: 		if(flag_t.status_in_menu==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 15   (midx: 21)
//inkubator_func.c,179 :: 		key_value=key_back;
	R1 <1> <- 4   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,180 :: 		}
15:   (midx: 0)
//inkubator_func.c,181 :: 		switch(key_value)
	goto	16   (midx: 0)
//inkubator_func.c,183 :: 		case key_up:           key_value=0; parameters_t.set_temperatura=parameters_t.set_temperatura+0.1;
18:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <4> <- addr(_parameters_t+0)   (midx: 0)
	S1 <4> <- [R1]   (midx: 0)
	R0 <4> <- 1.000000E-001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	[R1] <4> <- S1   (midx: 0)
//inkubator_func.c,184 :: 		if(parameters_t.set_temperatura>=40.0)
	R0 <4> <- 4.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	if ( S1 < S0) then goto 19   (midx: 9)
//inkubator_func.c,186 :: 		parameters_t.set_temperatura=40.0;
	R0 <4> <- 4.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,187 :: 		}
19:   (midx: 0)
//inkubator_func.c,188 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.set_temperatura);
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_17_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,189 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	17   (midx: 0)
//inkubator_func.c,191 :: 		case key_down:            key_value=0;parameters_t.set_temperatura=parameters_t.set_temperatura-0.1;
20:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <4> <- addr(_parameters_t+0)   (midx: 0)
	S1 <4> <- [R1]   (midx: 0)
	R0 <4> <- 1.000000E-001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	[R1] <4> <- S1   (midx: 0)
//inkubator_func.c,192 :: 		if(parameters_t.set_temperatura<=34.0)
	R0 <4> <- 3.400000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	if ( S1 > S0) then goto 21   (midx: 9)
//inkubator_func.c,194 :: 		parameters_t.set_temperatura=34.0;
	R0 <4> <- 3.400000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,195 :: 		}
21:   (midx: 0)
//inkubator_func.c,196 :: 		sprintf(Data_Str,"%-2.1f C",parameters_t.set_temperatura);
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R1 <4> <- #?lstr_18_inkubator_func   (midx: 0)
	R0 <4> <- #_Data_Str   (midx: 0)
	FARG_sprintf_8 <4> <- PUSH(S0)   (midx: 0)
	FARG_sprintf_f <4> <- PUSH(R1)   (midx: 0)
	FARG_sprintf_wh <4> <- PUSH(R0)   (midx: 0)
	CALL _sprintf   (midx: 0)
//inkubator_func.c,197 :: 		Lcd_Out(2,6,Data_Str); break;
	R2 <4> <- #_Data_Str   (midx: 0)
	R1 <1> <- 6   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
	goto	17   (midx: 0)
//inkubator_func.c,198 :: 		case key_enter:           key_value=0;go=1;kp=1;    break;
22:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_go_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_kp_L0 <1> <- R0   (midx: 0)
	goto	17   (midx: 0)
//inkubator_func.c,199 :: 		case key_back:           key_value=0;kp=1; Lcd_Cmd(_LCD_CLEAR);               // Clear display
23:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	set_temperature_kp_L0 <1> <- R0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,200 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);         break;
	R0 <1> <- 12   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
	goto	17   (midx: 0)
//inkubator_func.c,201 :: 		}
16:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 18   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 20   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 22   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 23   (midx: 0)
17:   (midx: 0)
//inkubator_func.c,203 :: 		}
	goto	13   (midx: 0)
14:   (midx: 0)
//inkubator_func.c,204 :: 		if(go==SET)set_humidity();
	R0 <1> <- set_temperature_go_L0   (midx: 0)
	if ( R0 != 1) then goto 24   (midx: 0)
	CALL _set_humidity   (midx: 0)
24:   (midx: 0)
  end
   (midx: 0)
_Beep:
  begin   (midx: 0)
//inkubator_func.c,557 :: 		void Beep()
_Beep:
  begin   (midx: 0)
//inkubator_func.c,559 :: 		Sound_Play(1000,100);
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- 1000   (midx: 0)
	CALL _Sound_Play   (midx: 0)
  end
   (midx: 0)
_read_key:
  begin   (midx: 0)
//inkubator_func.c,538 :: 		void read_key()
_read_key:
  begin   (midx: 0)
//inkubator_func.c,541 :: 		if(PIN_UP==RESET||PIN_DOWN==RESET||PIN_ENTER==RESET||PIN_BACK==RESET)
	R1 <4> <- addr(PIN_UP)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 257   (midx: 21)
	R1 <4> <- addr(PIN_DOWN)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 256   (midx: 21)
	R1 <4> <- addr(PIN_ENTER)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 255   (midx: 21)
	R1 <4> <- addr(PIN_BACK)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 254   (midx: 21)
	goto	114   (midx: 0)
257:   (midx: 0)
256:   (midx: 0)
255:   (midx: 0)
254:   (midx: 0)
//inkubator_func.c,543 :: 		count_key++;
	R1 <4> <- addr(read_key_count_key_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//inkubator_func.c,544 :: 		if(count_key==10)
	if ( R0 != 10) then goto 115   (midx: 0)
//inkubator_func.c,546 :: 		count_key=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(read_key_count_key_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,547 :: 		if(PIN_UP==RESET||PIN_DOWN==RESET||PIN_ENTER==RESET||PIN_BACK==RESET)
	R1 <4> <- addr(PIN_UP)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 261   (midx: 21)
	R1 <4> <- addr(PIN_DOWN)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 260   (midx: 21)
	R1 <4> <- addr(PIN_ENTER)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 259   (midx: 21)
	R1 <4> <- addr(PIN_BACK)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 258   (midx: 21)
	goto	118   (midx: 0)
261:   (midx: 0)
260:   (midx: 0)
259:   (midx: 0)
258:   (midx: 0)
//inkubator_func.c,549 :: 		Beep();
	CALL _Beep   (midx: 0)
//inkubator_func.c,550 :: 		key_value=key_code_pressed();
	CALL _key_code_pressed   (midx: 0)
	R1 <4> <- addr(_key_value)   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//inkubator_func.c,552 :: 		}
118:   (midx: 0)
//inkubator_func.c,553 :: 		}
115:   (midx: 0)
//inkubator_func.c,554 :: 		}
114:   (midx: 0)
  end
   (midx: 0)
_pid_Init:
  begin   (midx: 0)
//inkubator_func.c,572 :: 		void pid_Init(int16_t p_factor, int16_t i_factor, int16_t d_factor, struct PID_DATA *pid)
_pid_Init:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- R3   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//inkubator_func.c,576 :: 		pid->sumError = 0;
	R5 <4> <-  R3 + 4   (midx: 2)
	R4 <4> <- 0   (midx: 0)
	[R5] <4> <- R4   (midx: 0)
//inkubator_func.c,577 :: 		pid->lastProcessValue = 0;
	R4 <1> <- 0   (midx: 0)
	[R3] <1> <- R4   (midx: 0)
//inkubator_func.c,579 :: 		pid->P_Factor = p_factor;
	R4 <4> <-  R3 + 8   (midx: 2)
   (midx: 0)
	[R4] <1> <- R0   (midx: 0)
//inkubator_func.c,580 :: 		pid->I_Factor = i_factor;
	R4 <4> <-  R3 + 9   (midx: 2)
   (midx: 0)
	[R4] <1> <- R1   (midx: 0)
//inkubator_func.c,581 :: 		pid->D_Factor = d_factor;
	R4 <4> <-  R3 + 10   (midx: 2)
   (midx: 0)
	[R4] <1> <- R2   (midx: 0)
//inkubator_func.c,583 :: 		pid->maxError = MAX_INT / (pid->P_Factor + 1);
	R6 <4> <-  R3 + 11   (midx: 2)
	R4 <4> <-  R3 + 8   (midx: 2)
	R4 <1> <- *R4   (midx: 0)
	R5 <2> <-  R4 + 1   (midx: 4)
	R4 <2> <- 32767   (midx: 0)
	R4 <2> <-  R4 / R5   (midx: 5)
	[R6] <1> <- R4   (midx: 0)
//inkubator_func.c,584 :: 		pid->maxSumError = MAX_I_TERM / (pid->I_Factor + 1);
	R6 <4> <-  R3 + 12   (midx: 2)
   (midx: 0)
	R4 <4> <-  R3 + 9   (midx: 2)
	R4 <1> <- *R4   (midx: 0)
	R5 <2> <-  R4 + 1   (midx: 4)
	R4 <4> <- 1073741823   (midx: 0)
	R4 <4> <-  R4 / R5   (midx: 6)
	[R6] <4> <- R4   (midx: 0)
  end
   (midx: 0)
_pid_Controller:
  begin   (midx: 0)
//inkubator_func.c,596 :: 		int16_t pid_Controller(int16_t setPoint, int16_t processValue, struct PID_DATA *pid_st)
_pid_Controller:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <4> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//inkubator_func.c,601 :: 		error = setPoint - processValue;
   (midx: 0)
	R5 <2> <-  R0 - R1   (midx: 4)
   (midx: 0)
	R6 <1> <- R5   (midx: 0)
//inkubator_func.c,604 :: 		if (error > pid_st->maxError){
	R3 <4> <-  R2 + 11   (midx: 2)
	R4 <1> <- *R3   (midx: 0)
	R3 <1> <- R5   (midx: 0)
	if ( R3 <= R4) then goto 119   (midx: 4)
//inkubator_func.c,605 :: 		p_term = MAX_INT;
   (midx: 0)
	R0 <1> <- 32767   (midx: 0)
//inkubator_func.c,606 :: 		}
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	goto	120   (midx: 0)
119:   (midx: 0)
//inkubator_func.c,607 :: 		else if (error < -pid_st->maxError){
	R3 <4> <-  R2 + 11   (midx: 2)
	R3 <1> <- *R3   (midx: 0)
	R3 <2> <-  0 - R3   (midx: 4)
	if ( R6 >= R3) then goto 121   (midx: 5)
//inkubator_func.c,608 :: 		p_term = -MAX_INT;
   (midx: 0)
	R0 <1> <- -32767   (midx: 0)
//inkubator_func.c,609 :: 		}
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	goto	122   (midx: 0)
121:   (midx: 0)
//inkubator_func.c,611 :: 		p_term = pid_st->P_Factor * error;
	R3 <4> <-  R2 + 8   (midx: 2)
	R3 <1> <- *R3   (midx: 0)
	R3 <2> <-  R3 * R6   (midx: 4)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R3   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//inkubator_func.c,612 :: 		}
122:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
120:   (midx: 0)
//inkubator_func.c,615 :: 		temp = pid_st->sumError + error;
   (midx: 0)
	R3 <4> <-  R2 + 4   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
   (midx: 0)
	R4 <4> <-  R3 + R6   (midx: 6)
   (midx: 0)
	R5 <4> <- R4   (midx: 0)
//inkubator_func.c,616 :: 		if(temp > pid_st->maxSumError){
	R3 <4> <-  R2 + 12   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
   (midx: 0)
	if ( R4 <= R3) then goto 123   (midx: 6)
//inkubator_func.c,617 :: 		i_term = MAX_I_TERM;
   (midx: 0)
	R5 <4> <- 1073741823   (midx: 0)
//inkubator_func.c,618 :: 		pid_st->sumError = pid_st->maxSumError;
	R4 <4> <-  R2 + 4   (midx: 2)
	R3 <4> <-  R2 + 12   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
	[R4] <4> <- R3   (midx: 0)
//inkubator_func.c,619 :: 		}
   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	goto	124   (midx: 0)
123:   (midx: 0)
//inkubator_func.c,620 :: 		else if(temp < -pid_st->maxSumError){
   (midx: 0)
	R3 <4> <-  R2 + 12   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
	R3 <4> <-  0 - R3   (midx: 6)
   (midx: 0)
	if ( R5 >= R3) then goto 125   (midx: 6)
//inkubator_func.c,621 :: 		i_term = -MAX_I_TERM;
   (midx: 0)
	R5 <4> <- -1073741823   (midx: 0)
//inkubator_func.c,622 :: 		pid_st->sumError = -pid_st->maxSumError;
	R4 <4> <-  R2 + 4   (midx: 2)
	R3 <4> <-  R2 + 12   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
	R3 <4> <-  0 - R3   (midx: 6)
	[R4] <4> <- R3   (midx: 0)
//inkubator_func.c,623 :: 		}
   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	goto	126   (midx: 0)
125:   (midx: 0)
//inkubator_func.c,625 :: 		pid_st->sumError = temp;
   (midx: 0)
	R3 <4> <-  R2 + 4   (midx: 2)
   (midx: 0)
	[R3] <4> <- R5   (midx: 0)
//inkubator_func.c,626 :: 		i_term = pid_st->I_Factor * pid_st->sumError;
	R3 <4> <-  R2 + 9   (midx: 2)
	R4 <1> <- *R3   (midx: 0)
	R3 <4> <-  R2 + 4   (midx: 2)
	R3 <4> <- *R3   (midx: 0)
	R3 <4> <-  R4 * R3   (midx: 6)
   (midx: 0)
   (midx: 0)
	R4 <4> <- R3   (midx: 0)
	R5 <4> <- R4   (midx: 0)
//inkubator_func.c,627 :: 		}
126:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R5 <4> <- R5   (midx: 0)
124:   (midx: 0)
//inkubator_func.c,630 :: 		d_term = pid_st->D_Factor * (pid_st->lastProcessValue - processValue);
   (midx: 0)
	R3 <4> <-  R2 + 10   (midx: 2)
	R4 <1> <- *R3   (midx: 0)
	R3 <1> <- *R2   (midx: 0)
	R3 <2> <-  R3 - R1   (midx: 4)
	R3 <2> <-  R4 * R3   (midx: 5)
   (midx: 0)
	R4 <1> <- R3   (midx: 0)
//inkubator_func.c,632 :: 		pid_st->lastProcessValue = processValue;
   (midx: 0)
   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//inkubator_func.c,634 :: 		ret = (p_term + i_term + d_term) / SCALING_FACTOR;
   (midx: 0)
   (midx: 0)
	R3 <4> <-  R0 + R5   (midx: 6)
   (midx: 0)
	R3 <4> <-  R3 + R4   (midx: 6)
	S1 <4> <- (type cast)R3   (midx: 0)
	R3 <4> <- 1.280000E+002   (midx: 0)
	S0 <4> <- R3   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	S0 <4> <- (type cast)S0   (midx: 0)
	R4 <4> <- S0   (midx: 0)
   (midx: 0)
	R0 <4> <- R4   (midx: 0)
//inkubator_func.c,635 :: 		if(ret > MAX_INT){
	R3 <4> <- 32767   (midx: 0)
	if ( R4 <= R3) then goto 127   (midx: 6)
//inkubator_func.c,636 :: 		ret = MAX_INT;
	R0 <4> <- 32767   (midx: 0)
//inkubator_func.c,637 :: 		}
	R0 <4> <- R0   (midx: 0)
	goto	128   (midx: 0)
127:   (midx: 0)
//inkubator_func.c,638 :: 		else if(ret < -MAX_INT){
	R3 <4> <- -32767   (midx: 0)
	if ( R0 >= R3) then goto 262   (midx: 6)
//inkubator_func.c,639 :: 		ret = -MAX_INT;
   (midx: 0)
	R0 <4> <- -32767   (midx: 0)
	R0 <4> <- R0   (midx: 0)
//inkubator_func.c,640 :: 		}
	goto	129   (midx: 0)
262:   (midx: 0)
//inkubator_func.c,638 :: 		else if(ret < -MAX_INT){
	R0 <4> <- R0   (midx: 0)
//inkubator_func.c,640 :: 		}
129:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
128:   (midx: 0)
//inkubator_func.c,642 :: 		return((int16_t)ret);
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_pid_Reset_Integrator:
  begin   (midx: 0)
//inkubator_func.c,649 :: 		void pid_Reset_Integrator(pidData_t *pid_st)
_pid_Reset_Integrator:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
   (midx: 0)
//inkubator_func.c,651 :: 		pid_st->sumError = 0;
   (midx: 0)
	R2 <4> <-  R0 + 4   (midx: 2)
	R1 <4> <- 0   (midx: 0)
	[R2] <4> <- R1   (midx: 0)
  end
   (midx: 0)
_control_first_start:
  begin   (midx: 0)
//inkubator_func.c,654 :: 		void control_first_start()
_control_first_start:
  begin   (midx: 0)
//inkubator_func.c,657 :: 		if(temperature>=(parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 130   (midx: 8)
//inkubator_func.c,659 :: 		if(++count_first_start==40)
	R1 <4> <- addr(control_first_start_count_first_start_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 40) then goto 131   (midx: 0)
//inkubator_func.c,661 :: 		count_first_start=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_first_start_count_first_start_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,662 :: 		if(temperature>=(parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 132   (midx: 8)
//inkubator_func.c,664 :: 		flag_t.first_start_t=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,665 :: 		}
132:   (midx: 0)
//inkubator_func.c,666 :: 		}
131:   (midx: 0)
//inkubator_func.c,667 :: 		}
130:   (midx: 0)
//inkubator_func.c,668 :: 		if(rel_humidity>=(parameters_t.set_humidity-(parameters_t.humidity_delta_alarm_level-5)))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 133   (midx: 9)
//inkubator_func.c,673 :: 		if(rel_humidity>=(parameters_t.set_humidity-(parameters_t.humidity_delta_alarm_level-5)))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 135   (midx: 9)
//inkubator_func.c,675 :: 		flag_t.first_start_h=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,676 :: 		}
135:   (midx: 0)
//inkubator_func.c,678 :: 		}
133:   (midx: 0)
  end
   (midx: 0)
_control_temperature:
  begin   (midx: 0)
//inkubator_func.c,682 :: 		void control_temperature()
_control_temperature:
  begin   (midx: 0)
//inkubator_func.c,685 :: 		if((temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+0.5)||(temperature<=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level-0.5))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 268   (midx: 9)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 267   (midx: 9)
	goto	138   (midx: 0)
268:   (midx: 0)
267:   (midx: 0)
//inkubator_func.c,687 :: 		if(++count_temp==20)
	R1 <4> <- addr(control_temperature_count_temp_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 139   (midx: 0)
//inkubator_func.c,689 :: 		count_temp1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_count_temp1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,690 :: 		count_temp=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_count_temp_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,691 :: 		if((temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+0.5)||(temperature<=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level-0.5))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 270   (midx: 9)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 269   (midx: 9)
	goto	142   (midx: 0)
270:   (midx: 0)
269:   (midx: 0)
//inkubator_func.c,694 :: 		if(flag_t.first_start_t==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 143   (midx: 21)
//inkubator_func.c,696 :: 		flag_t.temperatura_alarm=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,697 :: 		set_fault(1);
	R0 <1> <- 1   (midx: 0)
	CALL _set_fault   (midx: 0)
//inkubator_func.c,698 :: 		}
143:   (midx: 0)
//inkubator_func.c,700 :: 		}
142:   (midx: 0)
//inkubator_func.c,701 :: 		}
139:   (midx: 0)
//inkubator_func.c,702 :: 		}
138:   (midx: 0)
//inkubator_func.c,704 :: 		if((temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level-0.5)&&(temperature>=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level+0.5))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 274   (midx: 9)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 273   (midx: 9)
264:   (midx: 0)
//inkubator_func.c,706 :: 		if(++count_temp1==20)
	R1 <4> <- addr(control_temperature_count_temp1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 147   (midx: 0)
//inkubator_func.c,708 :: 		count_temp1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_count_temp1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,709 :: 		count_temp=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_count_temp_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,710 :: 		if((temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level-0.5)&&(temperature>=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level+0.5))
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 272   (midx: 9)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 271   (midx: 9)
263:   (midx: 0)
//inkubator_func.c,713 :: 		flag_t.temperatura_alarm=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,710 :: 		if((temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level-0.5)&&(temperature>=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level+0.5))
272:   (midx: 0)
271:   (midx: 0)
//inkubator_func.c,715 :: 		}
147:   (midx: 0)
//inkubator_func.c,704 :: 		if((temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level-0.5)&&(temperature>=parameters_t.set_temperatura-parameters_t.temperatura_delta__alarm_level+0.5))
274:   (midx: 0)
273:   (midx: 0)
  end
   (midx: 0)
_control_temperature_cover:
  begin   (midx: 0)
//inkubator_func.c,719 :: 		void control_temperature_cover()
_control_temperature_cover:
  begin   (midx: 0)
//inkubator_func.c,722 :: 		if(temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 151   (midx: 8)
//inkubator_func.c,724 :: 		if((++count_temp_c)==20)
	R1 <4> <- addr(control_temperature_cover_count_temp_c_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 152   (midx: 0)
//inkubator_func.c,726 :: 		count_temp_c1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_cover_count_temp_c1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,727 :: 		count_temp_c=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_cover_count_temp_c_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,728 :: 		if(temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 153   (midx: 8)
//inkubator_func.c,731 :: 		flag_t.temperatura_alarm_cover=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,732 :: 		}
153:   (midx: 0)
//inkubator_func.c,733 :: 		}
152:   (midx: 0)
//inkubator_func.c,734 :: 		}
151:   (midx: 0)
//inkubator_func.c,736 :: 		if(temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level/4)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 4.000000E+000   (midx: 0)
	S1 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 154   (midx: 9)
//inkubator_func.c,738 :: 		if(++count_temp_c1==20)
	R1 <4> <- addr(control_temperature_cover_count_temp_c1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 155   (midx: 0)
//inkubator_func.c,740 :: 		count_temp_c1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_cover_count_temp_c1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,741 :: 		count_temp_c=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_cover_count_temp_c_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,742 :: 		if(temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level/4)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 4.000000E+000   (midx: 0)
	S1 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 156   (midx: 9)
//inkubator_func.c,745 :: 		flag_t.temperatura_alarm_cover=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,746 :: 		}
156:   (midx: 0)
//inkubator_func.c,747 :: 		}
155:   (midx: 0)
//inkubator_func.c,748 :: 		}
154:   (midx: 0)
  end
   (midx: 0)
_control_temperature_triac:
  begin   (midx: 0)
//inkubator_func.c,751 :: 		void control_temperature_triac()
_control_temperature_triac:
  begin   (midx: 0)
//inkubator_func.c,754 :: 		if(temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+10.0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 157   (midx: 9)
//inkubator_func.c,756 :: 		if(++count_temp2==20)
	R1 <4> <- addr(control_temperature_triac_count_temp2_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 158   (midx: 0)
//inkubator_func.c,758 :: 		count_temp2=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_triac_count_temp2_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,759 :: 		count_temp3=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_triac_count_temp3_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,760 :: 		if(temperature>=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+10.0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 159   (midx: 9)
//inkubator_func.c,763 :: 		flag_t.temperatura_triac_alarm=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,764 :: 		set_fault(3);
	R0 <1> <- 3   (midx: 0)
	CALL _set_fault   (midx: 0)
//inkubator_func.c,765 :: 		}
159:   (midx: 0)
//inkubator_func.c,766 :: 		}
158:   (midx: 0)
//inkubator_func.c,767 :: 		}
157:   (midx: 0)
//inkubator_func.c,769 :: 		if(temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+5.0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 160   (midx: 9)
//inkubator_func.c,771 :: 		if(++count_temp3==20)
	R1 <4> <- addr(control_temperature_triac_count_temp3_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 161   (midx: 0)
//inkubator_func.c,773 :: 		count_temp2=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_triac_count_temp2_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,774 :: 		count_temp3=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_temperature_triac_count_temp3_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,775 :: 		if(temperature<=parameters_t.set_temperatura+parameters_t.temperatura_delta__alarm_level+5.0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_temperature)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 162   (midx: 9)
//inkubator_func.c,778 :: 		flag_t.temperatura_triac_alarm=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,779 :: 		}
162:   (midx: 0)
//inkubator_func.c,780 :: 		}
161:   (midx: 0)
//inkubator_func.c,781 :: 		}
160:   (midx: 0)
  end
   (midx: 0)
_temperature_cover_open_close:
  begin   (midx: 0)
//inkubator_func.c,784 :: 		void temperature_cover_open_close()
_temperature_cover_open_close:
  begin   (midx: 0)
//inkubator_func.c,787 :: 		if(flag_t.temperatura_alarm_cover==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 163   (midx: 21)
//inkubator_func.c,790 :: 		if(flag_t.cover_status==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 164   (midx: 21)
//inkubator_func.c,793 :: 		if(( ++count_cover)==50)
	R1 <4> <- addr(temperature_cover_open_close_count_cover_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 50) then goto 165   (midx: 0)
//inkubator_func.c,795 :: 		count_cover1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(temperature_cover_open_close_count_cover1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,796 :: 		count_cover=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(temperature_cover_open_close_count_cover_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,797 :: 		flag_t.cover_status=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,798 :: 		}
165:   (midx: 0)
//inkubator_func.c,799 :: 		}
164:   (midx: 0)
//inkubator_func.c,801 :: 		if(flag_t.cover_status==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 166   (midx: 21)
//inkubator_func.c,804 :: 		if(( ++count_cover1)==20)
	R1 <4> <- addr(temperature_cover_open_close_count_cover1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 167   (midx: 0)
//inkubator_func.c,806 :: 		count_cover1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(temperature_cover_open_close_count_cover1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,807 :: 		count_cover=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(temperature_cover_open_close_count_cover_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,808 :: 		flag_t.cover_status=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,809 :: 		}
167:   (midx: 0)
//inkubator_func.c,810 :: 		}
166:   (midx: 0)
//inkubator_func.c,811 :: 		}
163:   (midx: 0)
//inkubator_func.c,812 :: 		if(flag_t.temperatura_alarm_cover==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 168   (midx: 21)
//inkubator_func.c,814 :: 		flag_t.cover_status=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,815 :: 		}
168:   (midx: 0)
  end
   (midx: 0)
_control_humidity:
  begin   (midx: 0)
//inkubator_func.c,818 :: 		void control_humidity()
_control_humidity:
  begin   (midx: 0)
//inkubator_func.c,821 :: 		if((rel_humidity>=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level+0.5)||(rel_humidity<=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level-0.5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 280   (midx: 9)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 279   (midx: 9)
	goto	171   (midx: 0)
280:   (midx: 0)
279:   (midx: 0)
//inkubator_func.c,823 :: 		if(++count_hum==20)
	R1 <4> <- addr(control_humidity_count_hum_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 172   (midx: 0)
//inkubator_func.c,825 :: 		count_hum=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_humidity_count_hum_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,826 :: 		count_hum1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_humidity_count_hum1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,827 :: 		if((rel_humidity>=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level+0.5)||(rel_humidity<=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level-0.5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 282   (midx: 9)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 281   (midx: 9)
	goto	175   (midx: 0)
282:   (midx: 0)
281:   (midx: 0)
//inkubator_func.c,830 :: 		if(flag_t.first_start_h==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 176   (midx: 21)
//inkubator_func.c,832 :: 		flag_t.humidity_alarm=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,833 :: 		set_fault(2);
	R0 <1> <- 2   (midx: 0)
	CALL _set_fault   (midx: 0)
//inkubator_func.c,834 :: 		}
176:   (midx: 0)
//inkubator_func.c,836 :: 		}
175:   (midx: 0)
//inkubator_func.c,837 :: 		}
172:   (midx: 0)
//inkubator_func.c,838 :: 		}
171:   (midx: 0)
//inkubator_func.c,840 :: 		if((rel_humidity<=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level-0.5)&&(rel_humidity>=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level+0.5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 286   (midx: 9)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 285   (midx: 9)
276:   (midx: 0)
//inkubator_func.c,842 :: 		if(++count_hum1==20)
	R1 <4> <- addr(control_humidity_count_hum1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 180   (midx: 0)
//inkubator_func.c,844 :: 		count_hum=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_humidity_count_hum_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,845 :: 		count_hum1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_humidity_count_hum1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,846 :: 		if((rel_humidity<=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level-0.5)&&(rel_humidity>=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level+0.5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 284   (midx: 9)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 8)
	S0 <4> <- 5.000000E-001   (midx: 0)
	S1 <4> <-  S1 + S0   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 283   (midx: 9)
275:   (midx: 0)
//inkubator_func.c,849 :: 		flag_t.humidity_alarm=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,846 :: 		if((rel_humidity<=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level-0.5)&&(rel_humidity>=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level+0.5))
284:   (midx: 0)
283:   (midx: 0)
//inkubator_func.c,851 :: 		}
180:   (midx: 0)
//inkubator_func.c,840 :: 		if((rel_humidity<=parameters_t.set_humidity+parameters_t.humidity_delta_alarm_level-0.5)&&(rel_humidity>=parameters_t.set_humidity-parameters_t.humidity_delta_alarm_level+0.5))
286:   (midx: 0)
285:   (midx: 0)
  end
   (midx: 0)
_control_cover_humidity:
  begin   (midx: 0)
//inkubator_func.c,856 :: 		void control_cover_humidity()
_control_cover_humidity:
  begin   (midx: 0)
//inkubator_func.c,859 :: 		if(rel_humidity<=parameters_t.set_humidity-(parameters_t.humidity_delta_alarm_level-5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 184   (midx: 9)
//inkubator_func.c,861 :: 		if(++count_humi==20)
	R1 <4> <- addr(control_cover_humidity_count_humi_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 185   (midx: 0)
//inkubator_func.c,863 :: 		count_humi=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_cover_humidity_count_humi_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,864 :: 		count_humi1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_cover_humidity_count_humi1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,865 :: 		if(rel_humidity<=parameters_t.set_humidity-(parameters_t.humidity_delta_alarm_level-5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 - S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 > S1) then goto 186   (midx: 9)
//inkubator_func.c,868 :: 		flag_t.humidity_alarm_cover=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,869 :: 		}
186:   (midx: 0)
//inkubator_func.c,870 :: 		}
185:   (midx: 0)
//inkubator_func.c,871 :: 		}
184:   (midx: 0)
//inkubator_func.c,872 :: 		if(rel_humidity>=parameters_t.set_humidity+(parameters_t.humidity_delta_alarm_level-5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 187   (midx: 9)
//inkubator_func.c,874 :: 		if(++count_humi1==20)
	R1 <4> <- addr(control_cover_humidity_count_humi1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 188   (midx: 0)
//inkubator_func.c,876 :: 		count_humi1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_cover_humidity_count_humi1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,877 :: 		count_humi=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(control_cover_humidity_count_humi_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,878 :: 		if(rel_humidity>=parameters_t.set_humidity+(parameters_t.humidity_delta_alarm_level-5))
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 5.000000E+000   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S0 + S1   (midx: 9)
	R0 <4> <- addr(_rel_humidity)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 < S1) then goto 189   (midx: 9)
//inkubator_func.c,881 :: 		flag_t.humidity_alarm_cover=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,882 :: 		}
189:   (midx: 0)
//inkubator_func.c,883 :: 		}
188:   (midx: 0)
//inkubator_func.c,884 :: 		}
187:   (midx: 0)
  end
   (midx: 0)
_humidity_cover_open_close:
  begin   (midx: 0)
//inkubator_func.c,887 :: 		void humidity_cover_open_close()
_humidity_cover_open_close:
  begin   (midx: 0)
//inkubator_func.c,890 :: 		if(flag_t.humidity_alarm_cover==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 190   (midx: 21)
//inkubator_func.c,893 :: 		if(flag_t.humidity_cover_status==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 191   (midx: 21)
//inkubator_func.c,896 :: 		if(( ++count_cover_h)==50)
	R1 <4> <- addr(humidity_cover_open_close_count_cover_h_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 50) then goto 192   (midx: 0)
//inkubator_func.c,898 :: 		count_cover_h1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(humidity_cover_open_close_count_cover_h1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,899 :: 		count_cover_h=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(humidity_cover_open_close_count_cover_h_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,900 :: 		flag_t.humidity_cover_status=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,901 :: 		}
192:   (midx: 0)
//inkubator_func.c,902 :: 		}
191:   (midx: 0)
//inkubator_func.c,904 :: 		if(flag_t.humidity_cover_status==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 193   (midx: 21)
//inkubator_func.c,907 :: 		if(( ++count_cover_h1)==20)
	R1 <4> <- addr(humidity_cover_open_close_count_cover_h1_L0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
	if ( R0 != 20) then goto 194   (midx: 0)
//inkubator_func.c,909 :: 		count_cover_h1=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(humidity_cover_open_close_count_cover_h1_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,910 :: 		count_cover_h=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(humidity_cover_open_close_count_cover_h_L0)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//inkubator_func.c,911 :: 		flag_t.humidity_cover_status=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,912 :: 		}
194:   (midx: 0)
//inkubator_func.c,913 :: 		}
193:   (midx: 0)
//inkubator_func.c,914 :: 		}
190:   (midx: 0)
//inkubator_func.c,915 :: 		if(flag_t.humidity_alarm_cover==RESET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 195   (midx: 21)
//inkubator_func.c,917 :: 		flag_t.humidity_cover_status=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,918 :: 		}
195:   (midx: 0)
  end
   (midx: 0)
_control_outs:
  begin   (midx: 0)
//inkubator_func.c,922 :: 		void control_outs()
_control_outs:
  begin   (midx: 0)
//inkubator_func.c,924 :: 		RELE_ALARM                                                                   = flag_t.temperatura_alarm||flag_t.humidity_alarm;
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 197   (midx: 0)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 197   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	goto	196   (midx: 0)
197:   (midx: 0)
	R1 <1> <- 1   (midx: 0)
196:   (midx: 0)
tmi: LogicalEnd   (midx: 0)
	R0 <4> <- addr(RELE_ALARM)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,925 :: 		LED_RED                                                                      = flag_t.temperatura_alarm||flag_t.humidity_alarm;
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 199   (midx: 0)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 199   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	goto	198   (midx: 0)
199:   (midx: 0)
	R1 <1> <- 1   (midx: 0)
198:   (midx: 0)
tmi: LogicalEnd   (midx: 0)
	R0 <4> <- addr(LED_RED)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,927 :: 		RELE_ALARM_TRIAC                                                             = flag_t.temperatura_triac_alarm;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(RELE_ALARM_TRIAC)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,928 :: 		LED_BLUE                                                                     = flag_t.temperatura_triac_alarm;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(LED_BLUE)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,930 :: 		RELE_FAN                                                                     = flag_t.start_fan;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(RELE_FAN)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,932 :: 		RELE_COVER                                                                   = flag_t.cover_status;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(RELE_COVER)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,934 :: 		RELE_HUMIDITI                                                                = flag_t.humidity_cover_status;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(RELE_HUMIDITI)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,935 :: 		LED_GREEN                                                                    = flag_t.humidity_cover_status;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(LED_GREEN)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
  end
   (midx: 0)
_reset_flags:
  begin   (midx: 0)
//inkubator_func.c,938 :: 		void reset_flags()
_reset_flags:
  begin   (midx: 0)
//inkubator_func.c,940 :: 		flag_t.temperatura_alarm=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,941 :: 		flag_t.temperatura_triac_alarm=0;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,942 :: 		flag_t.cover_status=0;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,943 :: 		flag_t.humidity_alarm=0;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,944 :: 		flag_t.humidity_cover_status=0;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,945 :: 		flag_t.control_humidity=0;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
  end
   (midx: 0)
_set_default_parameters:
  begin   (midx: 0)
//inkubator_func.c,949 :: 		void set_default_parameters()
_set_default_parameters:
  begin   (midx: 0)
//inkubator_func.c,951 :: 		parameters_t.set_temperatura=37.5;
	R0 <4> <- 3.750000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+0)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,952 :: 		parameters_t.set_humidity=50.0;
	R0 <4> <- 5.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,953 :: 		parameters_t.set_turn_time=60.0;
	R0 <4> <- 6.000000E+001   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,954 :: 		parameters_t.temperatura_delta__alarm_level=2.0;
	S0 <4> <- 2.000000E+000   (midx: 0)
	R0 <4> <- addr(_parameters_t+12)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,955 :: 		parameters_t.humidity_delta_alarm_level=10.0;
	S0 <4> <- 1.000000E+001   (midx: 0)
	R0 <4> <- addr(_parameters_t+16)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//inkubator_func.c,956 :: 		parameters_t.control_humidity=0.0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
  end
   (midx: 0)
_Load:
  begin   (midx: 0)
//inkubator_func.c,959 :: 		void Load()
_Load:
  begin   (midx: 0)
//inkubator_func.c,961 :: 		char i=0;
   (midx: 0)
//inkubator_func.c,962 :: 		unsigned int tone=0;
   (midx: 0)
//inkubator_func.c,963 :: 		Lcd_Cmd(_LCD_CLEAR);
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
//inkubator_func.c,964 :: 		Lcd_Out(2,1,"SYSTEMA STARTUET");
	R0 <4> <- #?lstr46_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <1> <- 2   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,965 :: 		for(i=0,tone=500;i<17;i++,tone+=80)
   (midx: 0)
	R8 <1> <- 0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <2> <- 500   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <2> <- R6   (midx: 0)
200:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R8 >= 17) then goto 201   (midx: 0)
//inkubator_func.c,967 :: 		Lcd_Out(1,i,">");
	R0 <4> <- #?lstr47_inkubator_func   (midx: 0)
	R2 <4> <- R0   (midx: 0)
	R1 <1> <- R8   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Out   (midx: 0)
//inkubator_func.c,968 :: 		Delay_ms(300);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//inkubator_func.c,969 :: 		Sound_Play(tone,100);
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R6   (midx: 0)
	CALL _Sound_Play   (midx: 0)
//inkubator_func.c,965 :: 		for(i=0,tone=500;i<17;i++,tone+=80)
	R8 <1> <-  R8 + 1   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <2> <-  R6 + 80   (midx: 1)
	R6 <2> <- R6   (midx: 0)
//inkubator_func.c,970 :: 		}
   (midx: 0)
   (midx: 0)
	R8 <1> <- R8   (midx: 0)
	R6 <2> <- R6   (midx: 0)
	goto	200   (midx: 0)
201:   (midx: 0)
//inkubator_func.c,971 :: 		Lcd_Cmd(_LCD_CLEAR);
	R0 <1> <- 1   (midx: 0)
	CALL _Lcd_Cmd   (midx: 0)
  end
   (midx: 0)
_reset_error_message:
  begin   (midx: 0)
//inkubator_func.c,1057 :: 		void reset_error_message()
_reset_error_message:
  begin   (midx: 0)
//inkubator_func.c,1059 :: 		unsigned char count_err=0;
   (midx: 0)
//inkubator_func.c,1060 :: 		for(count_err=0;count_err<255;count_err++)
   (midx: 0)
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R2 <1> <- R2   (midx: 0)
227:   (midx: 0)
   (midx: 0)
	if ( R2 >= 255) then goto 228   (midx: 0)
//inkubator_func.c,1062 :: 		errors[count_err]=0;
	R0 <4> <- #_errors   (midx: 0)
	R1 <4> <-  R0 + R2   (midx: 2)
	R0 <1> <- 0   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//inkubator_func.c,1060 :: 		for(count_err=0;count_err<255;count_err++)
	R2 <1> <-  R2 + 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//inkubator_func.c,1063 :: 		}
   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	goto	227   (midx: 0)
228:   (midx: 0)
  end
   (midx: 0)
_rotation:
  begin   (midx: 0)
//inkubator_func.c,1083 :: 		void rotation()
_rotation:
  begin   (midx: 0)
//inkubator_func.c,1086 :: 		if(++count_rotations==((unsigned long)parameters_t.set_turn_time*1200))
	R1 <4> <- addr(rotation_count_rotations_L0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R2 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R2   (midx: 0)
	R0 <4> <- addr(_parameters_t+8)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <- (type cast)S0   (midx: 0)
	R1 <4> <- S0   (midx: 0)
	R0 <4> <- 1200   (midx: 0)
	R0 <4> <-  R1 * R0   (midx: 2)
	if ( R2 != R0) then goto 234   (midx: 2)
//inkubator_func.c,1088 :: 		RELE_ROTATION^=1;
	R1 <4> <- addr(RELE_ROTATION)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <1> <- ~R0   (midx: 21)
	[R1] <0> <- R0   (midx: 0)
//inkubator_func.c,1089 :: 		count_rotations=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(rotation_count_rotations_L0)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//inkubator_func.c,1090 :: 		}
234:   (midx: 0)
  end
   (midx: 0)
_Get_key:
  begin   (midx: 0)
//inkubator_func.c,1093 :: 		void Get_key()
_Get_key:
  begin   (midx: 0)
//inkubator_func.c,1095 :: 		switch(key_value)
	goto	235   (midx: 0)
//inkubator_func.c,1097 :: 		case  key_up   :   key_value=0;flag_t.start_fan^=1;                                   break;
237:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R1 <1> <- ~R0   (midx: 21)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
	goto	236   (midx: 0)
//inkubator_func.c,1098 :: 		case  key_down :   key_value=0;flag_t.start_process^=1;
238:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R1 <1> <- ~R0   (midx: 21)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1099 :: 		if(flag_t.start_process==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 239   (midx: 21)
//inkubator_func.c,1101 :: 		flag_t.first_start_t=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1102 :: 		flag_t.first_start_h=RESET;
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1103 :: 		}
239:   (midx: 0)
//inkubator_func.c,1104 :: 		break;
	goto	236   (midx: 0)
//inkubator_func.c,1105 :: 		case  key_enter:   key_value=0;flag_t.status_in_menu=SET; set_temperature();          break;
240:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
	CALL _set_temperature   (midx: 0)
	goto	236   (midx: 0)
//inkubator_func.c,1106 :: 		case  key_back :   key_value=0;                                                       break;
241:   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	goto	236   (midx: 0)
//inkubator_func.c,1107 :: 		}
235:   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 1) then goto 237   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 2) then goto 238   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 3) then goto 240   (midx: 0)
	R0 <4> <- addr(_key_value)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 = 4) then goto 241   (midx: 0)
236:   (midx: 0)
  end
   (midx: 0)
_control_menu:
  begin   (midx: 0)
//inkubator_func.c,1111 :: 		void control_menu()
_control_menu:
  begin   (midx: 0)
//inkubator_func.c,1115 :: 		if(flag_t.status_in_menu==SET)
	R1 <4> <- addr(_flag_t+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (!R0) then goto 242   (midx: 21)
//inkubator_func.c,1117 :: 		if((++count_processed)>=(sec*20))   //20 count 1 second
	R1 <4> <- addr(control_menu_count_processed_L0)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R2 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R2   (midx: 0)
	R0 <4> <- addr(control_menu_sec_L0)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <2> <- 20   (midx: 0)
	R0 <2> <-  R1 * R0   (midx: 1)
	if ( R2 < R0) then goto 243   (midx: 1)
//inkubator_func.c,1119 :: 		count_processed=0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(control_menu_count_processed_L0)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//inkubator_func.c,1120 :: 		flag_t.status_in_menu=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1121 :: 		}
243:   (midx: 0)
//inkubator_func.c,1122 :: 		}
242:   (midx: 0)
  end
   (midx: 0)
_impulse:
  begin   (midx: 0)
//inkubator_func.c,1125 :: 		void impulse()
_impulse:
  begin   (midx: 0)
//inkubator_func.c,1128 :: 		TRIAC_OUT=1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(TRIAC_OUT)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
//inkubator_func.c,1129 :: 		Delay_us(500);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//inkubator_func.c,1131 :: 		TRIAC_OUT=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TRIAC_OUT)   (midx: 0)
	[R0] <0> <- R1   (midx: 0)
  end
   (midx: 0)
_start_eeprom:
  begin   (midx: 0)
//inkubator_func.c,1134 :: 		void start_eeprom()
_start_eeprom:
  begin   (midx: 0)
//inkubator_func.c,1136 :: 		EEPROM_Init();
	CALL _EEPROM_Init   (midx: 0)
//inkubator_func.c,1137 :: 		if(read_data_in_eeprom()==SET)
	CALL _read_data_in_eeprom   (midx: 0)
	if ( R0 != 1) then goto 245   (midx: 0)
//inkubator_func.c,1139 :: 		set_default_parameters();
	CALL _set_default_parameters   (midx: 0)
//inkubator_func.c,1140 :: 		}
245:   (midx: 0)
//inkubator_func.c,1141 :: 		if(parameters_t.control_humidity==0.0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 != 0.000000E+000) then goto 246   (midx: 9)
//inkubator_func.c,1143 :: 		flag_t.control_humidity=RESET;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1144 :: 		}
246:   (midx: 0)
//inkubator_func.c,1145 :: 		if(parameters_t.control_humidity==1.0)
	R0 <4> <- addr(_parameters_t+20)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S0 <4> <- 1.000000E+000   (midx: 0)
	if ( S1 != S0) then goto 247   (midx: 9)
//inkubator_func.c,1147 :: 		flag_t.control_humidity=SET;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_flag_t+0)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//inkubator_func.c,1148 :: 		}
247:   (midx: 0)
  end
   (midx: 0)

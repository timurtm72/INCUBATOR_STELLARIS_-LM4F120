_AM2302_Read:
  begin   (midx: 0)
//dht22.c,18 :: 		char AM2302_Read(float *humidity, float *temperature) {
_AM2302_Read:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R10 <4> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R11 <4> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//dht22.c,19 :: 		char i = 0, j = 1;
   (midx: 0)
   (midx: 0)
//dht22.c,20 :: 		char timeout = 0;
   (midx: 0)
//dht22.c,22 :: 		int t=0;
   (midx: 0)
//dht22.c,23 :: 		int h=0;
   (midx: 0)
//dht22.c,25 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_3, _GPIO_DIR_INPUT, _GPIO_CFG_DIGITAL_ENABLE , _GPIO_PINCODE_NONE);
	R2 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R2)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <1> <- 8   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//dht22.c,27 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_3, _GPIO_DIR_OUTPUT, _GPIO_CFG_DIGITAL_ENABLE | _GPIO_CFG_OPEN_DRAIN, _GPIO_PINCODE_NONE);
	R2 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R2)   (midx: 0)
	R3 <2> <- 264   (midx: 0)
	R2 <1> <- 1   (midx: 0)
	R1 <1> <- 8   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//dht22.c,28 :: 		AM2302_Bus_Out = 1;                                 //Set GPIOD pin 13 HIGH for 100 milliseconds
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(AM2302_Bus_Out)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
//dht22.c,29 :: 		Delay_ms(100);                                      //Delay 100ms
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,30 :: 		AM2302_Bus_Out = 0;                                 //Host the start signal down time min: 0.8ms, typ: 1ms, max: 20ms
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(AM2302_Bus_Out)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
//dht22.c,31 :: 		Delay_ms(2);                                        //Delay 2ms
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,32 :: 		AM2302_Bus_Out = 1;                                 //Set GPIOD pin 13 HIGH
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(AM2302_Bus_Out)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
//dht22.c,35 :: 		GPIO_Config(&GPIO_PORTB, _GPIO_PINMASK_3, _GPIO_DIR_INPUT, _GPIO_CFG_DIGITAL_ENABLE, _GPIO_PINCODE_NONE);
	R2 <1> <- 0   (midx: 0)
	FARG_GPIO_Config_pin_code <1> <- PUSH(R2)   (midx: 0)
	R3 <2> <- 256   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <1> <- 8   (midx: 0)
	R0 <4> <- #GPIO_PORTB   (midx: 0)
	CALL _GPIO_Config   (midx: 0)
//dht22.c,37 :: 		timeout = 200;
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <1> <- 200   (midx: 0)
	R1 <4> <- R10   (midx: 0)
	R0 <4> <- R11   (midx: 0)
	R4 <1> <- R4   (midx: 0)
//dht22.c,38 :: 		while (AM2302_Bus_In) {
2:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (!R2) then goto 3   (midx: 0)
//dht22.c,39 :: 		Delay_us(1);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,40 :: 		if (!timeout--) {
	R3 <1> <- R4   (midx: 0)
	R4 <1> <-  R4 - 1   (midx: 0)
	R4 <1> <- R4   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if (R3) then goto 5   (midx: 0)
//dht22.c,41 :: 		return 1;
	R0 <1> <- 1   (midx: 0)
	return   (midx: 0)
//dht22.c,42 :: 		} //ERROR: Sensor not responding
5:   (midx: 0)
//dht22.c,43 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R4 <1> <- R4   (midx: 0)
	goto	2   (midx: 0)
3:   (midx: 0)
//dht22.c,46 :: 		while (!AM2302_Bus_In) { //response to low time
   (midx: 0)
	R1 <4> <- PUSH(R1)   (midx: 254)
	R1 <4> <- R0   (midx: 0)
	R0 <4> <- POP   (midx: 254)
   (midx: 0)
6:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (R2) then goto 7   (midx: 0)
//dht22.c,47 :: 		Delay_us(1);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,48 :: 		}
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	goto	6   (midx: 0)
7:   (midx: 0)
//dht22.c,50 :: 		while (AM2302_Bus_In) { //response to high time
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
   (midx: 0)
9:   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (!R2) then goto 10   (midx: 0)
//dht22.c,51 :: 		Delay_us(1);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,52 :: 		}
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	goto	9   (midx: 0)
10:   (midx: 0)
//dht22.c,62 :: 		for (i = 0; i < 5; i++) {
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <1> <- 0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R4 <1> <- R4   (midx: 0)
12:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R4 >= 5) then goto 13   (midx: 0)
//dht22.c,64 :: 		for (j = 1; j <= 8; j++) { //get 8 bits from sensor
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <1> <- 1   (midx: 0)
	R1 <4> <- PUSH(R1)   (midx: 254)
	R1 <4> <- R0   (midx: 0)
	R0 <1> <- R4   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R4 <4> <- POP   (midx: 254)
15:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R3 > 8) then goto 16   (midx: 0)
	R5 <4> <- R4   (midx: 0)
	R4 <1> <- R3   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//dht22.c,65 :: 		while (!AM2302_Bus_In) { //signal "0", "1" low time
18:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (R2) then goto 19   (midx: 0)
//dht22.c,66 :: 		Delay_us(1);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,67 :: 		}
	R4 <1> <- R4   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	goto	18   (midx: 0)
19:   (midx: 0)
//dht22.c,68 :: 		Delay_us(30);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,69 :: 		sensor_byte <<= 1;       //add new lower byte
	R2 <2> <- AM2302_Read_sensor_byte_L0   (midx: 0)
	R2 <2> <-  R2 shl 1   (midx: 1)
	AM2302_Read_sensor_byte_L0 <1> <- R2   (midx: 0)
//dht22.c,70 :: 		if (AM2302_Bus_In) {     //if sda high after 30us => bit=1 else bit=0
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (!R2) then goto 27   (midx: 0)
//dht22.c,71 :: 		sensor_byte |= 1;
	R2 <1> <- AM2302_Read_sensor_byte_L0   (midx: 0)
	R2 <1> <-  R2 | 1   (midx: 0)
	AM2302_Read_sensor_byte_L0 <1> <- R2   (midx: 0)
//dht22.c,72 :: 		delay_us(45);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	asm: -1   (midx: 1)
	R0 <1> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	R4 <1> <- R4   (midx: 0)
//dht22.c,73 :: 		while (AM2302_Bus_In) {
24:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- addr(AM2302_Bus_In)   (midx: 0)
	R2 <4> <- [R3]   (midx: 0)
	if (!R2) then goto 25   (midx: 0)
//dht22.c,74 :: 		Delay_us(1);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//dht22.c,75 :: 		}
	R0 <1> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R5 <4> <- R5   (midx: 0)
	R4 <1> <- R4   (midx: 0)
	goto	24   (midx: 0)
25:   (midx: 0)
//dht22.c,76 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R3 <1> <- R4   (midx: 0)
	R4 <4> <- R5   (midx: 0)
   (midx: 0)
	goto	22   (midx: 0)
27:   (midx: 0)
//dht22.c,70 :: 		if (AM2302_Bus_In) {     //if sda high after 30us => bit=1 else bit=0
	R3 <1> <- R4   (midx: 0)
	R4 <4> <- R5   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//dht22.c,76 :: 		}
22:   (midx: 0)
//dht22.c,64 :: 		for (j = 1; j <= 8; j++) { //get 8 bits from sensor
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <1> <-  R3 + 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
//dht22.c,77 :: 		}
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R4 <4> <- R4   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	goto	15   (midx: 0)
16:   (midx: 0)
//dht22.c,78 :: 		AM2302_Data[i] = sensor_byte;
	R2 <4> <- #_AM2302_Data   (midx: 0)
	R3 <4> <-  R2 + R0   (midx: 2)
	R2 <1> <- AM2302_Read_sensor_byte_L0   (midx: 0)
	[R3] <1> <- R2   (midx: 0)
//dht22.c,62 :: 		for (i = 0; i < 5; i++) {
	R0 <1> <-  R0 + 1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
//dht22.c,79 :: 		}
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- PUSH(R0)   (midx: 254)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- R4   (midx: 0)
	R4 <1> <- POP   (midx: 254)
	goto	12   (midx: 0)
13:   (midx: 0)
//dht22.c,81 :: 		h= (AM2302_Data[0] << 8) + AM2302_Data[1];
   (midx: 0)
   (midx: 0)
	R2 <4> <- addr(_AM2302_Data)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R3 <2> <-  R2 shl 8   (midx: 1)
	R2 <4> <- addr(_AM2302_Data+1)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R4 <2> <-  R3 + R2   (midx: 1)
//dht22.c,82 :: 		t = (AM2302_Data[2] << 8) + AM2302_Data[3];
	R2 <4> <- addr(_AM2302_Data+2)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R3 <2> <-  R2 shl 8   (midx: 1)
	R2 <4> <- addr(_AM2302_Data+3)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R2 <2> <-  R3 + R2   (midx: 1)
   (midx: 0)
	R2 <2> <- R2   (midx: 0)
//dht22.c,83 :: 		*humidity=    (float)h / 10.0;
	S1 <4> <- (type cast)R4   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//dht22.c,84 :: 		*temperature= (float)t/10.0;
   (midx: 0)
	S1 <4> <- (type cast)R2   (midx: 0)
	S0 <4> <- 1.000000E+001   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//dht22.c,85 :: 		return 0;
	R0 <1> <- 0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
